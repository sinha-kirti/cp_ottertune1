[
    {
        "fields": {
            "category": "",
            "maxval": "65535",
            "dbms": 9,
            "name": "session_variables.auto_increment_increment",
            "minval": "1",
            "default": "1",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "auto_increment_increment and auto_increment_offset are intended for use with master-to-master replication, and can be used to control the operation of AUTO_INCREMENT columns. Both variables have global and session values, and each can assume an integer value between 1 and 65,535 inclusive. Setting the value of either of these two variables to 0 causes its value to be set to 1 instead. Attempting to set the value of either of these two variables to an integer greater than 65,535 or less than 0 causes its value to be set to 65,535 instead. Attempting to set the value of auto_increment_increment or auto_increment_offset to a noninteger value produces an error, and the actual value of the variable remains unchanged."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "65535",
            "dbms": 9,
            "name": "session_variables.auto_increment_offset",
            "minval": "1",
            "default": "1",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable has a default value of 1. For more information, see the description for auto_increment_increment."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.autocommit",
            "minval": "null",
            "default": "ON",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The autocommit mode. If set to 1, all changes to a table take effect immediately. If set to 0, you must use COMMIT to accept a transaction or ROLLBACK to cancel it. If autocommit is 0 and you change it to 1, MySQL performs an automatic COMMIT of any open transaction. Another way to begin a transaction is to use a START TRANSACTION or BEGIN statement. See Section\u00a013.3.1, 201cSTART TRANSACTION, COMMIT, and ROLLBACK Syntax\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.automatic_sp_privileges",
            "minval": "null",
            "default": "TRUE",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "When this variable has a value of 1 (the default), the server automatically grants the EXECUTE and ALTER ROUTINE privileges to the creator of a stored routine, if the user cannot already execute and alter or drop the routine. (The ALTER ROUTINE privilege is required to drop the routine.) The server also automatically drops those privileges from the creator when the routine is dropped. If automatic_sp_privileges is 0, the server does not automatically add or drop these privileges."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.avoid_temporal_upgrade",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable controls whether ALTER TABLE implicitly upgrades temporal columns found to be in pre-5.6.4 format (TIME, DATETIME, and TIMESTAMP columns without support for fractional seconds precision). Upgrading such columns requires a table rebuild, which prevents any use of fast alterations that might otherwise apply to the operation to be performed."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "65535",
            "dbms": 9,
            "name": "session_variables.back_log",
            "minval": "1",
            "default": "-1 (autosized)",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The number of outstanding connection requests MySQL can have. This comes into play when the main MySQL thread gets very many connection requests in a very short time. It then takes some time (although very little) for the main thread to check the connection and start a new thread. The back_log value indicates how many requests can be stacked during this short time before MySQL momentarily stops answering new requests. You need to increase this only if you expect a large number of connections in a short period of time."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.basedir",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The path to the MySQL installation base directory."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.big_tables",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "If set to 1, all temporary tables are stored on disk rather than in memory. This is a little slower, but the error The table tbl_name is full does not occur for SELECT operations that require a large temporary table. The default value for a new connection is 0 (use in-memory temporary tables). Normally, you should never need to set this variable, because in-memory tables are automatically converted to disk-based tables as required."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.bind_address",
            "minval": "null",
            "default": "*",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The value of the --bind-address option."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.binlog_cache_size",
            "minval": "4096",
            "default": "32768",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "The size of the cache to hold changes to the binary log during a transaction. A binary log cache is allocated for each client if the server supports any transactional storage engines and if the server has the binary log enabled (--log-bin option). If you often use large transactions, you can increase this cache size to get better performance. The Binlog_cache_use and Binlog_cache_disk_use status variables can be useful for tuning the size of this variable. See Section\u00a05.4.4, \u201cThe Binary Log\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.binlog_checksum",
            "minval": "null",
            "default": "CRC32",
            "tunable": true,
            "enumvals": "CRC32,NONE",
            "vartype": 5,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "When enabled, this variable causes the master to write a checksum for each event in the binary log. binlog_checksum supports the values NONE (disabled) and CRC32. The default is CRC32 as of MySQL 5.6.6, NONE before that."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.binlog_direct_non_transactional_updates",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Due to concurrency issues, a slave can become inconsistent when a transaction contains updates to both transactional and nontransactional tables. MySQL tries to preserve causality among these statements by writing nontransactional statements to the transaction cache, which is flushed upon commit. However, problems arise when modifications done to nontransactional tables on behalf of a transaction become immediately visible to other connections because these changes may not be written immediately into the binary log."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.binlog_error_action",
            "minval": "null",
            "default": "IGNORE_ERROR",
            "tunable": true,
            "enumvals": "IGNORE_ERROR,ABORT_SERVER",
            "vartype": 5,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Controls what happens when the server cannot write to the binary log, which can cause the master's log to become inconsistent and replication slaves to lose synchronization. Previous releases used the name binlogging_impossible_mode."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.binlog_format",
            "minval": "null",
            "default": "MIXED",
            "tunable": true,
            "enumvals": "ROW,STATEMENT,MIXED",
            "vartype": 5,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable sets the binary logging format, and can be any one of STATEMENT, ROW, or MIXED. See Section\u00a017.1.2, \u201cReplication Formats\u201d. binlog_format is set by the --binlog-format option at startup, or by the binlog_format variable at runtime."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.binlog_gtid_simple_recovery",
            "minval": "null",
            "default": "FALSE",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable controls how binary log files are iterated during the search for GTIDs when MySQL starts or restarts. In MySQL version 5.6.21, this variable was added as simplified_binlog_gtid_recovery and in MySQL version 5.6.23 it was renamed to binlog_gtid_simple_recovery."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.binlog_order_commits",
            "minval": "null",
            "default": "ON",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "If this variable is enabled (the default), transactions are committed in the same order they are written to the binary log. If disabled, transactions may be committed in parallel. In some cases, disabling this variable might produce a performance increment."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.binlog_row_image",
            "minval": "null",
            "default": "FULL",
            "tunable": true,
            "enumvals": "FULL,MINIMAL",
            "vartype": 5,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "For MySQL row-based replication, this variable determines how row images are written to the binary log."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.binlog_rows_query_log_events",
            "minval": "null",
            "default": "FALSE",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The binlog_rows_query_log_events system variable affects row-based logging only. When enabled, it causes a MySQL 5.6.2 or later server to write informational log events such as row query log events into its binary log. This information can be used for debugging and related purposes; such as obtaining the original query issued on the master when it cannot be reconstructed from the row updates."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.binlog_stmt_cache_size",
            "minval": "4096",
            "default": "32768",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "This variable determines the size of the cache for the binary log to hold nontransactional statements issued during a transaction. Separate binary log transaction and statement caches are allocated for each client if the server supports any transactional storage engines and if the server has the binary log enabled (--log-bin option). If you often use large nontransactional statements during transactions, you can increase this cache size to get better performance. The Binlog_stmt_cache_use and Binlog_stmt_cache_disk_use status variables can be useful for tuning the size of this variable. See Section\u00a05.4.4, \u201cThe Binary Log\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.binlogging_impossible_mode",
            "minval": "null",
            "default": "IGNORE_ERROR",
            "tunable": true,
            "enumvals": "IGNORE_ERROR,ABORT_SERVER",
            "vartype": 5,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This option is deprecated and will be removed in a future MySQL release. Use the renamed binlog_error_action to control what happens when the server cannot write to the binary log."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.block_encryption_mode",
            "minval": "null",
            "default": "aes-128-ecb",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable controls the block encryption mode for block-based algorithms such as AES. It affects encryption for AES_ENCRYPT() and AES_DECRYPT()."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.bulk_insert_buffer_size",
            "minval": "0",
            "default": "8388608",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "MyISAM uses a special tree-like cache to make bulk inserts faster for INSERT ... SELECT, INSERT ... VALUES (...), (...), ..., and LOAD DATA INFILE when adding data to nonempty tables. This variable limits the size of the cache tree in bytes per thread. Setting it to 0 disables this optimization. The default value is 8MB."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.character_set_client",
            "minval": "null",
            "default": "latin1",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The character set for statements that arrive from the client. The session value of this variable is set using the character set requested by the client when the client connects to the server. (Many clients support a --default-character-set option to enable this character set to be specified explicitly. See also Section\u00a010.1.4, \u201cConnection Character Sets and Collations\u201d.) The global value of the variable is used to set the session value in cases when the client-requested value is unknown or not available, or the server is configured to ignore client requests:"
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.character_set_connection",
            "minval": "null",
            "default": "latin1",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The character set used for literals that do not have a character set introducer and for number-to-string conversion. For information about introducers, see Section\u00a010.1.3.8, \u201cCharacter Set Introducers\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.character_set_database",
            "minval": "null",
            "default": "latin1",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The character set used by the default database. The server sets this variable whenever the default database changes. If there is no default database, the variable has the same value as character_set_server."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.character_set_filesystem",
            "minval": "null",
            "default": "binary",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The file system character set. This variable is used to interpret string literals that refer to file names, such as in the LOAD DATA INFILE and SELECT ... INTO OUTFILE statements and the LOAD_FILE() function. Such file names are converted from character_set_client to character_set_filesystem before the file opening attempt occurs. The default value is binary, which means that no conversion occurs. For systems on which multibyte file names are permitted, a different value may be more appropriate. For example, if the system represents file names using UTF-8, set character_set_filesystem to 'utf8'."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.character_set_results",
            "minval": "null",
            "default": "latin1",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The character set used for returning query results such as result sets or error messages to the client."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.character_set_server",
            "minval": "null",
            "default": "latin1",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The server's default character set."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.character_set_system",
            "minval": "null",
            "default": "utf8",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The character set used by the server for storing identifiers. The value is always utf8."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.character_sets_dir",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The directory where character sets are installed."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.collation_connection",
            "minval": "null",
            "default": "latin1_swedish_ci",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The collation of the connection character set."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.collation_database",
            "minval": "null",
            "default": "latin1_swedish_ci",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The collation used by the default database. The server sets this variable whenever the default database changes. If there is no default database, the variable has the same value as collation_server."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.collation_server",
            "minval": "null",
            "default": "latin1_swedish_ci",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The server's default collation."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.completion_type",
            "minval": "null",
            "default": "NO_CHAIN",
            "tunable": true,
            "enumvals": "NO_CHAIN,CHAIN,RELEASE,0,1,2",
            "vartype": 5,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The transaction completion type. This variable can take the values shown in the following table. The variable can be assigned using either the name values or corresponding integer values."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.concurrent_insert",
            "minval": "null",
            "default": "AUTO",
            "tunable": true,
            "enumvals": "NEVER,AUTO,ALWAYS,0,1,2",
            "vartype": 5,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "If AUTO (the default), MySQL permits INSERT and SELECT statements to run concurrently for MyISAM tables that have no free blocks in the middle of the data file. If you start mysqld with --skip-new, this variable is set to NEVER."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "31536000",
            "dbms": 9,
            "name": "session_variables.connect_timeout",
            "minval": "2",
            "default": "10",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The number of seconds that the mysqld server waits for a connect packet before responding with Bad handshake. The default value is 10 seconds."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.core_file",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Whether to write a core file if the server crashes. This variable is set by the --core-file option."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.datadir",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The path to the MySQL server data directory. Relative paths are resolved with respect to the current directory. If the server will be started automatically (that is, in contexts for which you cannot assume what the current directory will be), it is best to specify the datadir value as an absolute path."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.date_format",
            "minval": "null",
            "default": "%Y-%m-%d",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable is unused. It is deprecated and will be removed in a future MySQL release."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.datetime_format",
            "minval": "null",
            "default": "%Y-%m-%d %H:%i:%s",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable is unused. It is deprecated and will be removed in a future MySQL release."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.default_storage_engine",
            "minval": "null",
            "default": "InnoDB",
            "tunable": false,
            "enumvals": "null",
            "vartype": 5,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The default storage engine. This variable sets the storage engine for permanent tables only. To set the storage engine for TEMPORARY tables, set the default_tmp_storage_engine system variable."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.default_tmp_storage_engine",
            "minval": "null",
            "default": "InnoDB",
            "tunable": false,
            "enumvals": "null",
            "vartype": 5,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The default storage engine for TEMPORARY tables (created with CREATE TEMPORARY TABLE). To set the storage engine for permanent tables, set the default_storage_engine system variable."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "7",
            "dbms": 9,
            "name": "session_variables.default_week_format",
            "minval": "0",
            "default": "0",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The default mode value to use for the WEEK() function. See Section\u00a012.7, \u201cDate and Time Functions\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.delay_key_write",
            "minval": "null",
            "default": "ON",
            "tunable": true,
            "enumvals": "ON,OFF,ALL",
            "vartype": 5,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This option applies only to MyISAM tables. It can have one of the following values to affect handling of the DELAY_KEY_WRITE table option that can be used in CREATE TABLE statements."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.delayed_insert_limit",
            "minval": "1",
            "default": "100",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "After inserting delayed_insert_limit delayed rows into a nontransactional table, the INSERT DELAYED handler thread checks whether there are any SELECT statements pending. If so, it permits them to execute before continuing to insert delayed rows."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.delayed_insert_timeout",
            "minval": "null",
            "default": "300",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "How many seconds an INSERT DELAYED handler thread should wait for INSERT statements before terminating."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.delayed_queue_size",
            "minval": "1",
            "default": "1000",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This is a per-table limit on the number of rows to queue when handling INSERT DELAYED statements for nontransactional tables. If the queue becomes full, any client that issues an INSERT DELAYED statement waits until there is room in the queue again."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.disconnect_on_expired_password",
            "minval": "null",
            "default": "ON",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable controls how the server handles clients with expired passwords:"
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "30",
            "dbms": 9,
            "name": "session_variables.div_precision_increment",
            "minval": "0",
            "default": "4",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable indicates the number of digits by which to increase the scale of the result of division operations performed with the / operator. The default value is 4. The minimum and maximum values are 0 and 30, respectively. The following example illustrates the effect of increasing the default value."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.end_markers_in_json",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Whether optimizer JSON output should add end markers. See MySQL Internals: The end_markers_in_json System Variable."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.enforce_gtid_consistency",
            "minval": "null",
            "default": "false",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "When enabled, this option enforces GTID consistency by allowing execution of only those statements that can be logged in a transactionally safe manner. You must enable --enforce-gtid-consistency before setting --gtid-mode to ON; otherwise, enabling GTID mode fails with an error. You can (and should) use this option prior to using --gtid-mode, in order to test whether the system is ready to use GTIDs."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "4294967295",
            "dbms": 9,
            "name": "session_variables.eq_range_index_dive_limit",
            "minval": "0",
            "default": "10",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable indicates the number of equality ranges in an equality comparison condition when the optimizer should switch from using index dives to index statistics in estimating the number of qualifying rows. It applies to evaluation of expressions that have either of these equivalent forms, where the optimizer uses a nonunique index to look up col_name values:"
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.error_count",
            "minval": "null",
            "default": "0",
            "tunable": false,
            "enumvals": "null",
            "vartype": 2,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The number of errors that resulted from the last statement that generated messages. "
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.event_scheduler",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "ON,OFF,DISABLED",
            "vartype": 5,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable indicates the status of the Event Scheduler; possible values are ON, OFF, and DISABLED, with the default being OFF. This variable and its effects on the Event Scheduler's operation are discussed in greater detail in the Overview section of the Events chapter."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "99",
            "dbms": 9,
            "name": "session_variables.expire_logs_days",
            "minval": "0",
            "default": "0",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The number of days for automatic binary log file removal. The default is 0, which means \u201cno automatic removal.\u201d Possible removals happen at startup and when the binary log is flushed. Log flushing occurs as indicated in Section\u00a05.4, \u201cMySQL Server Logs\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.explicit_defaults_for_timestamp",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This system variable determines whether the server enables certain nonstandard behaviors for default values and NULL-value handling in TIMESTAMP columns. By default, explicit_defaults_for_timestamp is disabled, which enables the nonstandard behaviors."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.external_user",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The external user name used during the authentication process, as set by the plugin used to authenticate the client. With native (built-in) MySQL authentication, or if the plugin does not set the value, this variable is NULL. See Section\u00a06.3.8, \u201cProxy Users\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.flush",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "If ON, the server flushes (synchronizes) all changes to disk after each SQL statement. Normally, MySQL does a write of all changes to disk only after each SQL statement and lets the operating system handle the synchronizing to disk. See Section\u00a0B.5.3.3, \u201cWhat to Do If MySQL Keeps Crashing\u201d. This variable is set to ON if you start mysqld with the --flush option."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.flush_time",
            "minval": "0",
            "default": "0",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "If this is set to a nonzero value, all tables are closed every flush_time seconds to free up resources and synchronize unflushed data to disk. This option is best used only on systems with minimal resources. The default is 0."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.foreign_key_checks",
            "minval": "null",
            "default": "1",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "If set to 1 (the default), foreign key constraints for InnoDB tables are checked. If set to 0, foreign key constraints are ignored, with a couple of exceptions. When re-creating a table that was dropped, an error is returned if the table definition does not conform to the foreign key constraints referencing the table. Likewise, an ALTER TABLE operation returns an error if a foreign key definition is incorrectly formed. For more information, see Section\u00a013.1.17.6, \u201cUsing FOREIGN KEY Constraints\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.ft_boolean_syntax",
            "minval": "null",
            "default": "|",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The list of operators supported by boolean full-text searches performed using IN BOOLEAN MODE. See Section\u00a012.9.2, \u201cBoolean Full-Text Searches\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.ft_max_word_len",
            "minval": "10",
            "default": "84",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The maximum length of the word to be included in a MyISAM FULLTEXT index."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.ft_min_word_len",
            "minval": "1",
            "default": "4",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The minimum length of the word to be included in a MyISAM FULLTEXT index."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "1000",
            "dbms": 9,
            "name": "session_variables.ft_query_expansion_limit",
            "minval": "0",
            "default": "20",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The number of top matches to use for full-text searches performed using WITH QUERY EXPANSION."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.ft_stopword_file",
            "minval": "null",
            "default": "(built-in)",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The file from which to read the list of stopwords for full-text searches on MyISAM tables. The server looks for the file in the data directory unless an absolute path name is given to specify a different directory. All the words from the file are used; comments are not honored. By default, a built-in list of stopwords is used (as defined in the storage/myisam/ft_static.c file). Setting this variable to the empty string ('') disables stopword filtering. See also Section\u00a012.9.4, \u201cFull-Text Stopwords\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.general_log",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Whether the general query log is enabled. The value can be 0 (or OFF) to disable the log or 1 (or ON) to enable the log. The default value depends on whether the --general_log option is given. The destination for log output is controlled by the log_output system variable; if that value is NONE, no log entries are written even if the log is enabled."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.general_log_file",
            "minval": "null",
            "default": "host_name.log",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The name of the general query log file. The default value is host_name.log, but the initial value can be changed with the --general_log_file option."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.group_concat_max_len",
            "minval": "4",
            "default": "1024",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The maximum permitted result length in bytes for the GROUP_CONCAT() function. The default is 1024."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.gtid_executed",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "When used with global scope, this variable contains a representation of the set of all transactions that are logged in the binary log. This is the same as the value of the Executed_Gtid_Set column in the output of SHOW MASTER STATUS and SHOW SLAVE STATUS."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.gtid_mode",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "OFF,UPGRADE_STEP_1,UPGRADE_STEP_2,ON",
            "vartype": 5,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This option specifies whether global transaction identifiers (GTIDs) are used to identify transactions. Starting the server with --gtid-mode=ON requires that the server also be started with the --log-bin, --log-slave-updates, and --enforce-gtid-consistency options."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.gtid_next",
            "minval": "null",
            "default": "AUTOMATIC",
            "tunable": true,
            "enumvals": "AUTOMATIC,ANONYMOUS,UUID:NUMBER",
            "vartype": 5,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable is used to specify whether and how the next GTID is obtained. gtid_next can take any of the following values:"
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.gtid_owned",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This read-only variable holds a list whose contents depend on its scope. When used with session scope, the list holds all GTIDs that are owned by this client; when used with global scope, it holds a list of all GTIDs along with their owners."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.gtid_purged",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The set of all transactions that have been purged from the binary log. This is a subset of the set of transactions in gtid_executed."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.have_compress",
            "minval": "null",
            "default": "Yes",
            "tunable": false,
            "enumvals": "Yes,No",
            "vartype": 5,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "YES if the zlib compression library is available to the server, NO if not. If not, the COMPRESS() and UNCOMPRESS() functions cannot be used."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.have_crypt",
            "minval": "null",
            "default": "Yes",
            "tunable": false,
            "enumvals": "Yes,No",
            "vartype": 5,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "YES if the crypt() system call is available to the server, NO if not. If not, the ENCRYPT() function cannot be used."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.have_dynamic_loading",
            "minval": "null",
            "default": "Yes",
            "tunable": false,
            "enumvals": "Yes,No",
            "vartype": 5,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "YES if mysqld supports dynamic loading of plugins, NO if not. If the value is NO, you cannot use options such as --plugin-load to load plugins at server startup, or the INSTALL PLUGIN statement to load plugins at runtime."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.have_geometry",
            "minval": "null",
            "default": "Yes",
            "tunable": false,
            "enumvals": "Yes,No",
            "vartype": 5,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "YES if the server supports spatial data types, NO if not."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.have_openssl",
            "minval": "null",
            "default": "Yes",
            "tunable": false,
            "enumvals": "Yes,No",
            "vartype": 5,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": " YES if mysqld supports SSL connections, NO if not. DISABLED indicates that the server was compiled with SSL support, but was not started with the appropriate --ssl-xxx options."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.have_profiling",
            "minval": "null",
            "default": "Yes",
            "tunable": false,
            "enumvals": "Yes,No",
            "vartype": 5,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "YES if statement profiling capability is present, NO if not. If present, the profiling system variable controls whether this capability is enabled or disabled. This variable is deprecated and will be removed in a future MySQL release."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.have_query_cache",
            "minval": "null",
            "default": "Yes",
            "tunable": false,
            "enumvals": "Yes,No",
            "vartype": 5,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "YES if mysqld supports the query cache, NO if not."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.have_rtree_keys",
            "minval": "null",
            "default": "Yes",
            "tunable": false,
            "enumvals": "Yes,No",
            "vartype": 5,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "YES if RTREE indexes are available, NO if not. (These are used for spatial indexes in MyISAM tables.)"
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.have_ssl",
            "minval": "null",
            "default": "Disabled",
            "tunable": false,
            "enumvals": "Yes,No,Disabled",
            "vartype": 5,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "YES if mysqld supports SSL connections, NO if not. DISABLED indicates that the server was compiled with SSL support, but was not started with the appropriate --ssl-xxx options. For more information, see Section 6.4.5, \u201cBuilding MySQL with Support for Encrypted Connections\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.have_symlink",
            "minval": "null",
            "default": "Yes",
            "tunable": false,
            "enumvals": "Yes,No",
            "vartype": 5,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "YES if symbolic link support is enabled, NO if not. This is required on Unix for support of the DATA DIRECTORY and INDEX DIRECTORY table options, and on Windows for support of data directory symlinks. If the server is started with the --skip-symbolic-links option, the value is DISABLED."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "65536",
            "dbms": 9,
            "name": "session_variables.host_cache_size",
            "minval": "0",
            "default": "-1 (autosized)",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The size of the internal host cache (see Section\u00a08.12.5.2, \u201cDNS Lookup Optimization and the Host Cache\u201d). Setting the size to 0 disables the host cache. Changing the cache size at runtime implicitly causes a FLUSH HOSTS operation to clear the host cache and truncate the host_cache table."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.hostname",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The server sets this variable to the server host name at startup."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.identity",
            "minval": "null",
            "default": "0",
            "tunable": false,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable is a synonym for the last_insert_id variable. It exists for compatibility with other database systems. You can read its value with SELECT @@identity, and set it using SET identity."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.ignore_builtin_innodb",
            "minval": "null",
            "default": "OFF",
            "tunable": false,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "In MySQL 5.6, InnoDB is the default storage engine and InnoDB Plugin is not used, so"
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.ignore_db_dirs",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "A comma-separated list of names that are not considered as database directories in the data directory. The value is set from any instances of --ignore-db-dir given at server startup."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.init_connect",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "A string to be executed by the server for each client that connects. The string consists of one or more SQL statements, separated by semicolon characters. For example, each client session begins by default with autocommit mode enabled. For older servers (before MySQL 5.5.8), there is no global autocommit system variable to specify that autocommit should be disabled by default, but as a workaround init_connect can be used to achieve the same effect:"
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.init_file",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The name of the file specified with the --init-file option when you start the server. This should be a file containing SQL statements that you want the server to execute when it starts. Each statement must be on a single line and should not include comments. For more information, see the description of --init-file."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.init_slave",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable is similar to init_connect, but is a string to be executed by a slave server each time the SQL thread starts. The format of the string is the same as for the init_connect variable."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.insert_id",
            "minval": "null",
            "default": "0",
            "tunable": false,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The value to be used by the following INSERT or ALTER TABLE statement when inserting an AUTO_INCREMENT value. This is mainly used with the binary log."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.interactive_timeout",
            "minval": "1",
            "default": "28800",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The number of seconds the server waits for activity on an interactive connection before closing it. An interactive client is defined as a client that uses the CLIENT_INTERACTIVE option to mysql_real_connect(). See also wait_timeout."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709547520",
            "dbms": 9,
            "name": "session_variables.join_buffer_size",
            "minval": "128",
            "default": "262144",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "The minimum size of the buffer that is used for plain index scans, range index scans, and joins that do not use indexes and thus perform full table scans. Normally, the best way to get fast joins is to add indexes. Increase the value of join_buffer_size to get a faster full join when adding indexes is not possible. One join buffer is allocated for each full join between two tables. For a complex join between several tables for which indexes are not used, multiple join buffers might be necessary."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.keep_files_on_create",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "If a MyISAM table is created with no DATA DIRECTORY option, the .MYD file is created in the database directory. By default, if MyISAM finds an existing .MYD file in this case, it overwrites it. The same applies to .MYI files for tables created with no INDEX DIRECTORY option. To suppress this behavior, set the keep_files_on_create variable to ON (1), in which case MyISAM will not overwrite existing files and returns an error instead. The default value is OFF (0)."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "OS_PER_PROCESS_LIMIT",
            "dbms": 9,
            "name": "session_variables.key_buffer_size",
            "minval": "8",
            "default": "8388608",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Index blocks for MyISAM tables are buffered and are shared by all threads. key_buffer_size is the size of the buffer used for index blocks. The key buffer is also known as the key cache."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.key_cache_age_threshold",
            "minval": "100",
            "default": "300",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This value controls the demotion of buffers from the hot sublist of a key cache to the warm sublist. Lower values cause demotion to happen more quickly. The minimum value is 100. The default value is 300. See Section\u00a08.10.2, \u201cThe MyISAM Key Cache\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "16384",
            "dbms": 9,
            "name": "session_variables.key_cache_block_size",
            "minval": "512",
            "default": "1024",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "The size in bytes of blocks in the key cache. The default value is 1024. See Section\u00a08.10.2, \u201cThe MyISAM Key Cache\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "100",
            "dbms": 9,
            "name": "session_variables.key_cache_division_limit",
            "minval": "1",
            "default": "100",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The division point between the hot and warm sublists of the key cache buffer list. The value is the percentage of the buffer list to use for the warm sublist. Permissible values range from 1 to 100. The default value is 100. See Section\u00a08.10.2, \u201cThe MyISAM Key Cache\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.large_files_support",
            "minval": "null",
            "default": "ON",
            "tunable": false,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Whether mysqld was compiled with options for large file support."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.large_page_size",
            "minval": "null",
            "default": "0",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "If large page support is enabled, this shows the size of memory pages. Large memory pages are supported only on Linux; on other platforms, the value of this variable is always 0. See Section\u00a08.12.4.2, \u201cEnabling Large Page Support\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.large_pages",
            "minval": "null",
            "default": "FALSE",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Whether large page support is enabled (via the --large-pages option). See Section\u00a08.12.4.2, \u201cEnabling Large Page Support\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.last_insert_id",
            "minval": "null",
            "default": "0",
            "tunable": false,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The value to be returned from LAST_INSERT_ID(). This is stored in the binary log when you use LAST_INSERT_ID() in a statement that updates a table. Setting this variable does not update the value returned by the mysql_insert_id() C API function."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.lc_messages",
            "minval": "null",
            "default": "en_US",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The locale to use for error messages. The default is en_US. The server converts the argument to a language name and combines it with the value of lc_messages_dir to produce the location for the error message file. See Section\u00a010.2, \u201cSetting the Error Message Language\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.lc_messages_dir",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The directory where error messages are located. The server uses the value together with the value of lc_messages to produce the location for the error message file. See Section\u00a010.2, \u201cSetting the Error Message Language\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.lc_time_names",
            "minval": "null",
            "default": "en_US",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable specifies the locale that controls the language used to display day and month names and abbreviations. This variable affects the output from the DATE_FORMAT(), DAYNAME() and MONTHNAME() functions. Locale names are POSIX-style values such as 'ja_JP' or 'pt_BR'. The default value is 'en_US' regardless of your system's locale setting. For further information, see Section\u00a010.7, \u201cMySQL Server Locale Support\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.license",
            "minval": "null",
            "default": "GPL",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The type of license the server has."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.local_infile",
            "minval": "null",
            "default": "ON",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable controls server-side LOCAL capability for LOAD DATA statements. Depending on the local_infile setting, the server refuses or permits local data loading by clients that have LOCAL enabled on the client side."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "31536000",
            "dbms": 9,
            "name": "session_variables.lock_wait_timeout",
            "minval": "1",
            "default": "31536000",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable specifies the timeout in seconds for attempts to acquire metadata locks. The permissible values range from 1 to 31536000 (1 year). The default is 31536000."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.locked_in_memory",
            "minval": "null",
            "default": "OFF",
            "tunable": false,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Whether mysqld was locked in memory with --memlock."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.log_bin",
            "minval": "null",
            "default": "ON",
            "tunable": false,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Enable binary logging. The server logs all statements that change data to the binary log, which is used for backup and replication. See Section\u00a05.4.4, \u201cThe Binary Log\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.log_bin_basename",
            "minval": "null",
            "default": "datadir + '/' + hostname + '-bin'",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Holds the name and complete path to the binary log file. Unlike the log_bin system variable, log_bin_basename reflects the name set with the --log-bin server option."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.log_bin_index",
            "minval": "null",
            "default": "datadir + '/' + hostname + '-bin.index'",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The index file for binary log file names."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.log_bin_trust_function_creators",
            "minval": "null",
            "default": "FALSE",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable applies when binary logging is enabled. It controls whether stored function creators can be trusted not to create stored functions that will cause unsafe events to be written to the binary log. If set to 0 (the default), users are not permitted to create or alter stored functions unless they have the SUPER privilege in addition to the CREATE ROUTINE or ALTER ROUTINE privilege. A setting of 0 also enforces the restriction that a function must be declared with the DETERMINISTIC characteristic, or with the READS SQL DATA or NO SQL characteristic. If the variable is set to 1, MySQL does not enforce these restrictions on stored function creation. This variable also applies to trigger creation. See Section\u00a020.7, \u201cBinary Logging of Stored Programs\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.log_bin_use_v1_row_events",
            "minval": "null",
            "default": "0",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Version 2 binary log row events are available beginning with MySQL 5.6.6; however, Version 2 events cannot be read by previous MySQL Server releases. Setting this option to 1 causes mysqld to write the binary log using Version 1 logging events, which is the only version of binary log events used in previous releases, and thus produce binary logs that can be read by older slaves. Setting --log-bin-use-v1-row-events to 0 (the default) causes mysqld to use Version 2 binary log events."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.log_error",
            "minval": "null",
            "default": "datadir + '/' + hostname + '.err'",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The name of the error log file, or empty if the server is writing error messages to the console rather than to a named file. See Section\u00a05.4.2, \u201cThe Error Log\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.log_output",
            "minval": "null",
            "default": "FILE",
            "tunable": true,
            "enumvals": "TABLE,FILE,NONE",
            "vartype": 5,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The destination for general query log and slow query log output. The value can be a comma-separated list of one or more of the words TABLE (log to tables), FILE (log to files), or NONE (do not log to tables or files). The default value is FILE. NONE, if present, takes precedence over any other specifiers. If the value is NONE log entries are not written even if the logs are enabled. If the logs are not enabled, no logging occurs even if the value of log_output is not NONE. For more information, see Section\u00a05.4.1, \u201cSelecting General Query and Slow Query Log Output Destinations\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.log_queries_not_using_indexes",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Whether queries that do not use indexes are logged to the slow query log. See Section\u00a05.4.5, \u201cThe Slow Query Log\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.log_slave_updates",
            "minval": "null",
            "default": "FALSE",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Whether updates received by a slave server from a master server should be logged to the slave's own binary log. Binary logging must be enabled on the slave for this variable to have any effect. See Section\u00a017.1.4, \u201cReplication and Binary Logging Options and Variables\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.log_slow_admin_statements",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Include slow administrative statements in the statements written to the slow query log. Administrative statements include ALTER TABLE, ANALYZE TABLE, CHECK TABLE, CREATE INDEX, DROP INDEX, OPTIMIZE TABLE, and REPAIR TABLE."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.log_slow_slave_statements",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "When the slow query log is enabled, this variable enables logging for queries that have taken more than long_query_time seconds to execute on the slave. This variable was added in MySQL 5.6.11."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.log_throttle_queries_not_using_indexes",
            "minval": "null",
            "default": "0",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "If log_queries_not_using_indexes is enabled, the log_throttle_queries_not_using_indexes variable limits the number of such queries per minute that can be written to the slow query log. A value of 0 (the default) means \u201cno limit\u201d. For more information, see Section\u00a05.4.5, \u201cThe Slow Query Log\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.log_warnings",
            "minval": "0",
            "default": "1",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Whether to produce additional warning messages to the error log. This variable is enabled by default with a value of 1. To disable it, set it to 0. If the value is greater than 0, the server logs messages about statements that are unsafe for statement-based logging. If the value is greater than 1, the server logs aborted connections and access-denied errors for new connection attempts. See Section\u00a0B.5.2.11, \u201cCommunication Errors and Aborted Connections\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.long_query_time",
            "minval": "0",
            "default": "10",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "If a query takes longer than this many seconds, the server increments the Slow_queries status variable. If the slow query log is enabled, the query is logged to the slow query log file. This value is measured in real time, not CPU time, so a query that is under the threshold on a lightly loaded system might be above the threshold on a heavily loaded one. The minimum and default values of long_query_time are 0 and 10, respectively. The value can be specified to a resolution of microseconds. For logging to a file, times are written including the microseconds part. For logging to tables, only integer times are written; the microseconds part is ignored. See Section\u00a05.4.5, \u201cThe Slow Query Log\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.low_priority_updates",
            "minval": "null",
            "default": "FALSE",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "If set to 1, all INSERT, UPDATE, DELETE, and LOCK TABLE WRITE statements wait until there is no pending SELECT or LOCK TABLE READ on the affected table. This affects only storage engines that use only table-level locking (such as MyISAM, MEMORY, and MERGE)."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.lower_case_file_system",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable describes the case sensitivity of file names on the file system where the data directory is located. OFF means file names are case sensitive, ON means they are not case sensitive. This variable is read only because it reflects a file system attribute and setting it would have no effect on the file system."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "2",
            "dbms": 9,
            "name": "session_variables.lower_case_table_names",
            "minval": "0",
            "default": "0",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "If set to 0, table names are stored as specified and comparisons are case sensitive. If set to 1, table names are stored in lowercase on disk and comparisons are not case sensitive. If set to 2, table names are stored as given but compared in lowercase. This option also applies to database names and table aliases. For additional information, see Section\u00a09.2.2, \u201cIdentifier Case Sensitivity\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.master_info_repository",
            "minval": "null",
            "default": "FILE",
            "tunable": false,
            "enumvals": "FILE",
            "vartype": 1,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The setting of this variable determines whether the slave logs master status and connection information to a FILE (master.info), or to a TABLE (mysql.slave_master_info)."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.master_verify_checksum",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Enabling this variable causes the master to examine checksums when reading from the binary log. master_verify_checksum is disabled by default; in this case, the master uses the event length from the binary log to verify events, so that only complete events are read from the binary log."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "1073741824",
            "dbms": 9,
            "name": "session_variables.max_allowed_packet",
            "minval": "1024",
            "default": "4194304",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "The maximum size of one packet or any generated/intermediate string, or any parameter sent by the mysql_stmt_send_long_data() C API function. The default is 4MB."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.max_binlog_cache_size",
            "minval": "4096",
            "default": "18446744073709551615",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "If a transaction requires more than this many bytes of memory, the server generates a Multi-statement transaction required more than 'max_binlog_cache_size' bytes of storage error. The minimum value is 4096. The maximum possible value is 16EB (exabytes). The maximum recommended value is 4GB; this is due to the fact that MySQL currently cannot work with binary log positions greater than 4GB."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "1073741824",
            "dbms": 9,
            "name": "session_variables.max_binlog_size",
            "minval": "4096",
            "default": "1073741824",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "If a write to the binary log causes the current log file size to exceed the value of this variable, the server rotates the binary logs (closes the current file and opens the next one). The minimum value is 4096 bytes. The maximum and default value is 1GB."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709547520",
            "dbms": 9,
            "name": "session_variables.max_binlog_stmt_cache_size",
            "minval": "4096",
            "default": "18446744073709547520",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "If nontransactional statements within a transaction require more than this many bytes of memory, the server generates an error. The minimum value is 4096. The maximum and default values are 4GB on 32-bit platforms and 16EB (exabytes) on 64-bit platforms."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.max_connect_errors",
            "minval": "1",
            "default": "100",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "If more than this many successive connection requests from a host are interrupted without a successful connection, the server blocks that host from further connections. You can unblock blocked hosts by flushing the host cache. To do so, issue a FLUSH HOSTS statement or execute a mysqladmin flush-hosts command. If a connection is established successfully within fewer than max_connect_errors attempts after a previous connection was interrupted, the error count for the host is cleared to zero. However, once a host is blocked, flushing the host cache is the only way to unblock it. The default is 100."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "100000",
            "dbms": 9,
            "name": "session_variables.max_connections",
            "minval": "1",
            "default": "151",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The maximum permitted number of simultaneous client connections. By default, this is 151. See Section\u00a0B.5.2.7, \u201cToo many connections\u201d, for more information."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "16384",
            "dbms": 9,
            "name": "session_variables.max_delayed_threads",
            "minval": "0",
            "default": "20",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Do not start more than this number of threads to handle INSERT DELAYED statements for nontransactional tables. If you try to insert data into a new table after all INSERT DELAYED threads are in use, the row is inserted as if the DELAYED attribute was not specified. If you set this to 0, MySQL never creates a thread to handle DELAYED rows; in effect, this disables DELAYED entirely."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "1048576",
            "dbms": 9,
            "name": "session_variables.max_digest_length",
            "minval": "0",
            "default": "1024",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "The maximum number of bytes available for computing normalized statement digests. Once that amount of space is used during digest computation, truncation occurs: no further tokens from a parsed statement are collected or figure into its digest value. Statements that differ only after that many bytes of parsed tokens produce the same normalized statement digest and are considered identical if compared or if aggregated for digest statistics."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "65535",
            "dbms": 9,
            "name": "session_variables.max_error_count",
            "minval": "0",
            "default": "64",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The maximum number of error, warning, and note messages to be stored for display by the SHOW ERRORS and SHOW WARNINGS statements. This is the same as the number of condition areas in the diagnostics area, and thus the number of conditions that can be inspected by GET DIAGNOSTICS."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.max_insert_delayed_threads",
            "minval": "null",
            "default": "20",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable is a synonym for max_delayed_threads."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.max_join_size",
            "minval": "1",
            "default": "18446744073709551615",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Do not permit statements that probably need to examine more than max_join_size rows (for single-table statements) or row combinations (for multiple-table statements) or that are likely to do more than max_join_size disk seeks. By setting this value, you can catch statements where keys are not used properly and that would probably take a long time. Set it if your users tend to perform joins that lack a WHERE clause, that take a long time, or that return millions of rows."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "8388608",
            "dbms": 9,
            "name": "session_variables.max_length_for_sort_data",
            "minval": "4",
            "default": "1024",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The cutoff on the size of index values that determines which filesort algorithm to use. See Section\u00a08.2.1.13, \u201cORDER BY Optimization\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "1048576",
            "dbms": 9,
            "name": "session_variables.max_prepared_stmt_count",
            "minval": "0",
            "default": "16382",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable limits the total number of prepared statements in the server. (The sum of the number of prepared statements across all sessions.) It can be used in environments where there is the potential for denial-of-service attacks based on running the server out of memory by preparing huge numbers of statements. If the value is set lower than the current number of prepared statements, existing statements are not affected and can be used, but no new statements can be prepared until the current number drops below the limit. The default value is 16,382. The permissible range of values is from 0 to 1 million. Setting the value to 0 disables prepared statements."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "1073741824",
            "dbms": 9,
            "name": "session_variables.max_relay_log_size",
            "minval": "0",
            "default": "0",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "If a write by a replication slave to its relay log causes the current log file size to exceed the value of this variable, the slave rotates the relay logs (closes the current file and opens the next one). If max_relay_log_size is 0, the server uses max_binlog_size for both the binary log and the relay log. If max_relay_log_size is greater than 0, it constrains the size of the relay log, which enables you to have different sizes for the two logs. You must set max_relay_log_size to between 4096 bytes and 1GB (inclusive), or to 0. The default value is 0. See Section\u00a017.2.1, \u201cReplication Implementation Details\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.max_seeks_for_key",
            "minval": "1",
            "default": "18446744073709551615",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Limit the assumed maximum number of seeks when looking up rows based on a key. The MySQL optimizer assumes that no more than this number of key seeks are required when searching for matching rows in a table by scanning an index, regardless of the actual cardinality of the index (see Section\u00a013.7.5.23, \u201cSHOW INDEX Syntax\u201d). By setting this to a low value (say, 100), you can force MySQL to prefer indexes instead of table scans."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "8388608",
            "dbms": 9,
            "name": "session_variables.max_sort_length",
            "minval": "4",
            "default": "1024",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "The number of bytes to use when sorting data values. The server uses only the first max_sort_length bytes of each value and ignores the rest. Consequently, values that differ only after the first max_sort_length bytes compare as equal for GROUP BY, ORDER BY, and DISTINCT operations."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "255",
            "dbms": 9,
            "name": "session_variables.max_sp_recursion_depth",
            "minval": "null",
            "default": "0",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The number of times that any given stored procedure may be called recursively. The default value for this option is 0, which completely disables recursion in stored procedures. The maximum value is 255."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.max_tmp_tables",
            "minval": "null",
            "default": "32",
            "tunable": false,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable is unused. It is deprecated and will be removed in a future MySQL release."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "4294967295",
            "dbms": 9,
            "name": "session_variables.max_user_connections",
            "minval": "0",
            "default": "0",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The maximum number of simultaneous connections permitted to any given MySQL user account. A value of 0 (the default) means \u201cno limit.\u201d"
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.max_write_lock_count",
            "minval": "1",
            "default": "18446744073709551615",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "After this many write locks, permit some pending read lock requests to be processed in between."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "1048576",
            "dbms": 9,
            "name": "session_variables.metadata_locks_cache_size",
            "minval": "1",
            "default": "1024",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The size of the metadata locks cache. The server uses this cache to avoid creation and destruction of synchronization objects. This is particularly helpful on systems where such operations are expensive, such as Windows XP."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "1024",
            "dbms": 9,
            "name": "session_variables.metadata_locks_hash_instances",
            "minval": "1",
            "default": "8",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The set of metadata locks can be partitioned into separate hashes to permit connections accessing different objects to use different locking hashes and reduce contention. The metadata_locks_hash_instances system variable specifies the number of hashes (default 8)."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.min_examined_row_limit",
            "minval": "0",
            "default": "0",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Queries that examine fewer than this number of rows are not logged to the slow query log."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "4294967295",
            "dbms": 9,
            "name": "session_variables.multi_range_count",
            "minval": "1",
            "default": "256",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable has no effect. It is deprecated and will be removed in a future MySQL release."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "7",
            "dbms": 9,
            "name": "session_variables.myisam_data_pointer_size",
            "minval": "2",
            "default": "6",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "The default pointer size in bytes, to be used by CREATE TABLE for MyISAM tables when no MAX_ROWS option is specified. This variable cannot be less than 2 or larger than 7. The default value is 6. See Section\u00a0B.5.2.12, \u201cThe table is full\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.myisam_max_sort_file_size",
            "minval": "null",
            "default": "9223372036854775807",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "The maximum size of the temporary file that MySQL is permitted to use while re-creating a MyISAM index (during REPAIR TABLE, ALTER TABLE, or LOAD DATA INFILE). If the file size would be larger than this value, the index is created using the key cache instead, which is slower. The value is given in bytes."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.myisam_mmap_size",
            "minval": "7",
            "default": "18446744073709551615",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The maximum amount of memory to use for memory mapping compressed MyISAM files. If many compressed MyISAM tables are used, the value can be decreased to reduce the likelihood of memory-swapping problems."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.myisam_recover_options",
            "minval": "null",
            "default": "OFF",
            "tunable": false,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The value of the --myisam-recover-options option. See Section\u00a05.1.4, \u201cServer Command Options\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.myisam_repair_threads",
            "minval": "1",
            "default": "1",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "If this value is greater than 1, MyISAM table indexes are created in parallel (each index in its own thread) during the Repair by sorting process. The default value is 1."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.myisam_sort_buffer_size",
            "minval": "4096",
            "default": "8388608",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The size of the buffer that is allocated when sorting MyISAM indexes during a REPAIR TABLE or when creating indexes with CREATE INDEX or ALTER TABLE."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.myisam_stats_method",
            "minval": "null",
            "default": "nulls_unequal",
            "tunable": true,
            "enumvals": "nulls_equal,nulls_unequal,nulls_ignored",
            "vartype": 5,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "How the server treats NULL values when collecting statistics about the distribution of index values for MyISAM tables. This variable has three possible values, nulls_equal, nulls_unequal, and nulls_ignored. For nulls_equal, all NULL index values are considered equal and form a single value group that has a size equal to the number of NULL values. For nulls_unequal, NULL values are considered unequal, and each NULL forms a distinct value group of size 1. For nulls_ignored, NULL values are ignored."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.myisam_use_mmap",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Use memory mapping for reading and writing MyISAM tables."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "1048576",
            "dbms": 9,
            "name": "session_variables.net_buffer_length",
            "minval": "1024",
            "default": "16384",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Each client thread is associated with a connection buffer and result buffer. Both begin with a size given by net_buffer_length but are dynamically enlarged up to max_allowed_packet bytes as needed. The result buffer shrinks to net_buffer_length after each SQL statement."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.net_read_timeout",
            "minval": "1",
            "default": "30",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The number of seconds to wait for more data from a connection before aborting the read. When the server is reading from the client, net_read_timeout is the timeout value controlling when to abort. When the server is writing to the client, net_write_timeout is the timeout value controlling when to abort. See also slave_net_timeout."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.net_retry_count",
            "minval": "1",
            "default": "10",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "If a read or write on a communication port is interrupted, retry this many times before giving up. This value should be set quite high on FreeBSD because internal interrupts are sent to all threads."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.net_write_timeout",
            "minval": "1",
            "default": "60",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The number of seconds to wait for a block to be written to a connection before aborting the write. See also net_read_timeout."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.new",
            "minval": "null",
            "default": "FALSE",
            "tunable": false,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable was used in MySQL 4.0 to turn on some 4.1 behaviors, and is retained for backward compatibility. Its value is always OFF."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.old",
            "minval": "null",
            "default": "OFF",
            "tunable": false,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "old is a compatibility variable. It is disabled by default, but can be enabled at startup to revert the server to behaviors present in older versions."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.old_alter_table",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "When this variable is enabled, the server does not use the optimized method of processing an ALTER TABLE operation. It reverts to using a temporary table, copying over the data, and then renaming the temporary table to the original, as used by MySQL 5.0 and earlier. For more information on the operation of ALTER TABLE, see Section\u00a013.1.7, \u201cALTER TABLE Syntax\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.old_passwords",
            "minval": "null",
            "default": "0",
            "tunable": true,
            "enumvals": "0,1,2",
            "vartype": 5,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable controls the password hashing method used by the PASSWORD() function. It also influences password hashing performed by CREATE USER and GRANT statements that specify a password using an IDENTIFIED BY clause."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "platform dependent",
            "dbms": 9,
            "name": "session_variables.open_files_limit",
            "minval": "0",
            "default": "5000, with possible adjustment",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The number of files that the operating system permits mysqld to open. The value of this variable at runtime is the real value permitted by the system and might be different from the value you specify at server startup. The value is 0 on systems where MySQL cannot change the number of open files."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.optimizer_prune_level",
            "minval": "null",
            "default": "1",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Controls the heuristics applied during query optimization to prune less-promising partial plans from the optimizer search space. A value of 0 disables heuristics so that the optimizer performs an exhaustive search. A value of 1 causes the optimizer to prune plans based on the number of rows retrieved by intermediate plans."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "62",
            "dbms": 9,
            "name": "session_variables.optimizer_search_depth",
            "minval": "0",
            "default": "62",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The maximum depth of search performed by the query optimizer. Values larger than the number of relations in a query result in better query plans, but take longer to generate an execution plan for a query. Values smaller than the number of relations in a query return an execution plan quicker, but the resulting plan may be far from being optimal. If set to 0, the system automatically picks a reasonable value."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.optimizer_switch",
            "minval": "null",
            "default": "index_merge=on,index_merge_union=on,index_merge_sort_union=on,index_merge_intersection=on,engine_condition_pushdown=on,index_condition_pushdown=on,mrr=on,mrr_cost_based=on,block_nested_loop=on,batched_key_access=off,materialization=on,semijoin=on,loosescan=on,firstmatch=on,subquery_materialization_cost_based=on,use_index_extensions=on,skip_scan=off,skip_scan_cost_based=on",
            "tunable": false,
            "enumvals": "null",
            "vartype": 5,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The optimizer_switch system variable enables control over optimizer behavior. The value of this variable is a set of flags, each of which has a value of on or off to indicate whether the corresponding optimizer behavior is enabled or disabled. This variable has global and session values and can be changed at runtime. The global default can be set at server startup."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.optimizer_trace",
            "minval": "null",
            "default": "enabled=off,one_line=off",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable controls optimizer tracing. For details, see MySQL Internals: Tracing the Optimizer."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.optimizer_trace_features",
            "minval": "null",
            "default": "greedy_search=on,range_optimizer=on,dynamic_range=on,repeated_subselect=on",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable enables or disables selected optimizer tracing features. For details, see MySQL Internals: Tracing the Optimizer."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.optimizer_trace_limit",
            "minval": "null",
            "default": "1",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The maximum number of optimizer traces to display. For details, see MySQL Internals: Tracing the Optimizer."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.optimizer_trace_max_mem_size",
            "minval": "null",
            "default": "16384",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The maximum cumulative size of stored optimizer traces. For details, see MySQL Internals: Tracing the Optimizer."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.optimizer_trace_offset",
            "minval": "null",
            "default": "-1",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The offset of optimizer traces to display. For details, see MySQL Internals: Tracing the Optimizer."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.pid_file",
            "minval": "null",
            "default": "datadir + '/' + hostname + '.pid'",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The path name of the process ID (PID) file. On Windows, this variable also affects the default error log file name. See Section\u00a05.4.2, \u201cThe Error Log\u201d. This variable can be set with the --pid-file option."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.plugin_dir",
            "minval": "null",
            "default": "BASEDIR/lib/plugin",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The path name of the plugin directory."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "65535",
            "dbms": 9,
            "name": "session_variables.port",
            "minval": "0",
            "default": "3306",
            "tunable": false,
            "enumvals": "null",
            "vartype": 2,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The number of the port on which the server listens for TCP/IP connections. This variable can be set with the --port option."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "1073741824",
            "dbms": 9,
            "name": "session_variables.preload_buffer_size",
            "minval": "1024",
            "default": "32768",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The size of the buffer that is allocated when preloading indexes."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.profiling",
            "minval": "null",
            "default": " 0 or OFF",
            "tunable": true,
            "enumvals": " 0 or OFF, 1 or ON",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "If set to 0 or OFF (the default), statement profiling is disabled. If set to 1 or ON, statement profiling is enabled and the SHOW PROFILE and SHOW PROFILES statements provide access to profiling information. This variable is deprecated and will be removed in a future MySQL release."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.profiling_history_size",
            "minval": "null",
            "default": "15",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The number of statements for which to maintain profiling information if profiling is enabled. The default value is 15. The maximum value is 100. Setting the value to 0 effectively disables profiling.  This variable is deprecated and will be removed in a future MySQL release."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.protocol_version",
            "minval": "null",
            "default": "10",
            "tunable": false,
            "enumvals": "null",
            "vartype": 2,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The version of the client/server protocol used by the MySQL server."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.proxy_user",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "If the current client is a proxy for another user, this variable is the proxy user account name. Otherwise, this variable is NULL. See Section\u00a06.3.8, \u201cProxy Users\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.pseudo_slave_mode",
            "minval": "null",
            "default": "OFF",
            "tunable": false,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable is for internal server use."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.pseudo_thread_id",
            "minval": "null",
            "default": "60",
            "tunable": false,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable is for internal server use."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.query_alloc_block_size",
            "minval": "1024",
            "default": "8192",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The allocation size of memory blocks that are allocated for objects created during statement parsing and execution. If you have problems with memory fragmentation, it might help to increase this parameter."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.query_cache_limit",
            "minval": "0",
            "default": "1048576",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "Do not cache results that are larger than this number of bytes. The default value is 1MB."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.query_cache_min_res_unit",
            "minval": "512",
            "default": "4096",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "The minimum size (in bytes) for blocks allocated by the query cache. The default value is 4096 (4KB). Tuning information for this variable is given in Section\u00a08.10.3.3, \u201cQuery Cache Configuration\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.query_cache_size",
            "minval": "0",
            "default": "1048576",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "The amount of memory allocated for caching query results. By default, the query cache is disabled. This is achieved using a default value of 1M, with a default for query_cache_type of 0."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.query_cache_type",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Set the query cache type. Setting the GLOBAL value sets the type for all clients that connect thereafter. Individual clients can set the SESSION value to affect their own use of the query cache. Possible values are shown in the following table."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.query_cache_wlock_invalidate",
            "minval": "null",
            "default": "FALSE",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Normally, when one client acquires a WRITE lock on a MyISAM table, other clients are not blocked from issuing statements that read from the table if the query results are present in the query cache. Setting this variable to 1 causes acquisition of a WRITE lock for a table to invalidate any queries in the query cache that refer to the table. This forces other clients that attempt to access the table to wait while the lock is in effect."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.query_prealloc_size",
            "minval": "8192",
            "default": "8192",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "The size of the persistent buffer used for statement parsing and execution. This buffer is not freed between statements. If you are running complex queries, a larger query_prealloc_size value might be helpful in improving performance, because it can reduce the need for the server to perform memory allocation during query execution operations."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rand_seed1",
            "minval": "null",
            "default": "0",
            "tunable": false,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The rand_seed1 and rand_seed2 variables exist as session variables only, and can be set but not read. The variables\u2014but not their values\u2014are shown in the output of SHOW VARIABLES. The purpose of these variables is to support replication of the RAND() function. For statements that invoke RAND(), the master passes two values to the slave, where they are used to seed the random number generator. The slave uses these values to set the session variables rand_seed1 and rand_seed2 so that RAND() on the slave generates the same value as on the master."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rand_seed2",
            "minval": "null",
            "default": "0",
            "tunable": false,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "See the description for rand_seed1."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.range_alloc_block_size",
            "minval": "4096",
            "default": "4096",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "The size of blocks that are allocated when doing range optimization."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "2147479552",
            "dbms": 9,
            "name": "session_variables.read_buffer_size",
            "minval": "8200",
            "default": "131072",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "Each thread that does a sequential scan for a MyISAM table allocates a buffer of this size (in bytes) for each table it scans. If you do many sequential scans, you might want to increase this value, which defaults to 131072. The value of this variable should be a multiple of 4KB. If it is set to a value that is not a multiple of 4KB, its value will be rounded down to the nearest multiple of 4KB."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.read_only",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "When the read_only system variable is enabled, the server permits no client updates except from users who have the SUPER privilege. This variable is disabled by default."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "2147483647",
            "dbms": 9,
            "name": "session_variables.read_rnd_buffer_size",
            "minval": "1",
            "default": "262144",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable is used for reads from MyISAM tables, and, for any storage engine, for Multi-Range Read optimization."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.relay_log",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The base name for the relay log. The default base name is host_name-relay-bin. The server writes the file in the data directory unless the base name is given with a leading absolute path name to specify a different directory. The server creates relay log files in sequence by adding a numeric suffix to the base name."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.relay_log_basename",
            "minval": "null",
            "default": "datadir + '/' + hostname + '-relay-bin'",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Holds the name and complete path to the relay log file."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.relay_log_index",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The name to use for the relay log index file. The default name is host_name-relay-bin.index in the data directory, where host_name is the name of the slave server."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.relay_log_info_file",
            "minval": "null",
            "default": "relay-log.info",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The name of the file in which the slave records information about the relay logs. The default name is relay-log.info in the data directory."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.relay_log_info_repository",
            "minval": "null",
            "default": "FILE",
            "tunable": false,
            "enumvals": "FILE",
            "vartype": 1,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable determines whether the slave's position in the relay logs is written to a FILE (relay-log.info) or to a TABLE (mysql.slave_relay_log_info)."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.relay_log_purge",
            "minval": "null",
            "default": "TRUE",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Disables or enables automatic purging of relay log files as soon as they are not needed any more. The default value is 1 (ON)."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.relay_log_recovery",
            "minval": "null",
            "default": "FALSE",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Enables automatic relay log recovery immediately following server startup. The recovery process creates a new relay log file, initializes the SQL thread position to this new relay log, and initializes the I/O thread to the SQL thread position. Reading of the relay log from the master then continues. In MySQL 5.6.5 and earlier, it was possible to change this global variable dynamically; beginning with MySQL 5.6.6, it is read-only. (Bug #13840948) Regardless of the MySQL Server version, its value can be changed by starting the slave with the --relay-log-recovery option, which should be used following a unexpected halt on the replication slave to ensure that no possibly corrupted relay logs are processed. See Section\u00a017.3.2, \u201cHandling an Unexpected Halt of a Replication Slave\u201d for more information."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.relay_log_space_limit",
            "minval": "0",
            "default": "0",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The maximum amount of space to use for all relay logs."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.report_host",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The value of the --report-host option."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.report_password",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The value of the --report-password option. Not the same as the password used for the MySQL replication user account."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "65535",
            "dbms": 9,
            "name": "session_variables.report_port",
            "minval": "0",
            "default": "[slave_port]",
            "tunable": false,
            "enumvals": "null",
            "vartype": 2,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The value of the --report-port option."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.report_user",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The value of the --report-user option. Not the same as the name for the MySQL replication user account."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "3",
            "dbms": 9,
            "name": "session_variables.rocksdb_access_hint_on_compaction_start",
            "minval": "0",
            "default": "Normal or 1",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies the file access pattern once a compaction is started,applied to all input files of a compaction.Possible values are: 0 = NONE ,1 = NORMAL (default), 2 = SEQUENTIAL, 3 = WILLNEED"
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_advise_random_on_open",
            "minval": "null",
            "default": "ON",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether to hint the underlying file systemthat the file access pattern is random,when a data file is opened.Enabled by default."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_allow_concurrent_memtable_write",
            "minval": "null",
            "default": "OFF",
            "tunable": false,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether to allow multiple writers to update memtables in parallel.Disabled by default."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_allow_mmap_reads",
            "minval": "null",
            "default": "OFF",
            "tunable": false,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether to allow the OS to map a data file into memory for reads.Disabled by default.If you enable this,make sure that rocksdb_use_direct_reads is disabled."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_allow_mmap_writes",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether to allow the OS to map a data file into memory for writes.Disabled by default."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "9223372036854775807",
            "dbms": 9,
            "name": "session_variables.rocksdb_block_cache_size",
            "minval": "1024",
            "default": "536870912",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "Specifies the size of the LRU block cache for RocksDB.This memory is reserved for the block cache,which is in addition to any filesystem caching that may occur."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "2147483647",
            "dbms": 9,
            "name": "session_variables.rocksdb_block_restart_interval",
            "minval": "1",
            "default": "16",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies the number of keys for each set of delta encoded data.Default value is 16.Allowed range is from 1 to 2147483647."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.rocksdb_block_size",
            "minval": "1",
            "default": "4096",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "Specifies the size of the data block for reading RocksDB data files.Default value is 4096.Allowed range is from 1 to 18446744073709551615."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "2147483647",
            "dbms": 9,
            "name": "session_variables.rocksdb_block_size_deviation",
            "minval": "1",
            "default": "10",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "Specifies the threshold for free space allowed in a data block(see rocksdb_block_size).If there is less space remaining,close the block (and write to new block).Default value is 10, meaning that the block is not closeduntil there is less than 10 bits of free space remaining."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_bulk_load",
            "minval": "null",
            "default": "OFF",
            "tunable": false,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether to use bulk load:MyRocks will ignore checking keys for uniquenessor acquiring locks during transactions.Disabled by default.Enable this only if you are certain that there are no row conflicts,for example, when setting up a new MyRocks instance from a MySQL dump."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "1073741824",
            "dbms": 9,
            "name": "session_variables.rocksdb_bulk_load_size",
            "minval": "1",
            "default": "1000",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies the number of keys to accumulatebefore committing them to the storage engine when bulk load is enabled(see rocksdb_bulk_load).Default value is 1000,which means that a batch can contain up to 1000 recordsbefore they are implicitly committed.Allowed range is from 1 to 1073741824."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.rocksdb_bytes_per_sync",
            "minval": "0",
            "default": "0",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "Specifies how often should the OS sync files to diskas they are being written, asynchronously, in the background.This operation can be used to smooth out write I/O over time.Default value is 0 meaning that files are never synced.Allowed range is up to 18446744073709551615."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_cache_index_and_filter_blocks",
            "minval": "null",
            "default": "ON",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether RocksDB should use the block cache for caching the indexand bloomfilter data blocks from each data file.Enabled by default.If you disable this feature,RocksDB will allocate additional memory to maintain these data blocks."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "100",
            "dbms": 9,
            "name": "session_variables.rocksdb_checksums_pct",
            "minval": "0",
            "default": "100",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies the percentage of rows to be checksummed.Default value is 100 (checksum all rows).Allowed range is from 0 to 100."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_collect_sst_properties",
            "minval": "null",
            "default": "ON",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether to collect statistics on each data fileto improve optimizer behavior.Enabled by default."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_commit_in_the_middle",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether to commit rows implicitlywhen a batch contains more than the value ofrocksdb_bulk_load_size.This is disabled by defaultand will be enabled if rocksdb_bulk_load is enabled."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_compact_cf",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies the name of the column family to compact."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.rocksdb_compaction_readahead_size",
            "minval": "0",
            "default": "0",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "Specifies the size of reads to perform ahead of compaction.Default value is 0.Set this to at least 2 megabytes (16777216)when using MyRocks with spinning disksto ensure sequential reads instead of random.Maximum allowed value is 18446744073709551615."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "2000000",
            "dbms": 9,
            "name": "session_variables.rocksdb_compaction_sequential_deletes",
            "minval": "0",
            "default": "0",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies the threshold to trigger compaction on a fileif it has more than this number of sequential delete markers.Default value is 0 meaning that compaction is not triggeredregardless of the number of delete markers.Maximum allowed value is 2000000 (two million delete markers)."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_compaction_sequential_deletes_count_sd",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether to count single deletes as delete markersrecognized by rocksdb_compaction_sequential_deletes.Disabled by default."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "9223372036854775807",
            "dbms": 9,
            "name": "session_variables.rocksdb_compaction_sequential_deletes_file_size",
            "minval": "-1",
            "default": "0",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "Specifies the minimum file size required to trigger compaction on itby rocksdb_compaction_sequential_deletes.Default value is 0,meaning that compaction is triggered regardless of file size.Allowed range is from -1 to 9223372036854775807."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "2000000",
            "dbms": 9,
            "name": "session_variables.rocksdb_compaction_sequential_deletes_window",
            "minval": "0",
            "default": "0",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies the size of the window for counting delete markersby rocksdb_compaction_sequential_deletes.Default value is 0.Allowed range is up to 2000000 (two million)."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_create_checkpoint",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies the directory where MyRocks should create a checkpoint.Empty by default."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_create_if_missing",
            "minval": "null",
            "default": "ON",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether MyRocks should create its database if it does not exist.Enabled by default."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_create_missing_column_families",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether MyRocks should create new column familiesif they do not exist.Disabled by default."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_datadir",
            "minval": "null",
            "default": "./.rocksdb",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies the location of the MyRocks data directory.By default, it is created in the current working directory."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.rocksdb_db_write_buffer_size",
            "minval": "0",
            "default": "0",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "Specifies the size of the memtable used to store writes in MyRocks.This is the size per column family.When this size is reached, the memtable is flushed to persistent media.Default value is 0.Allowed range is up to 18446744073709551615."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_deadlock_detect",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether MyRocks should detect deadlocks.Disabled by default."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_debug_optimizer_no_zero_cardinality",
            "minval": "null",
            "default": "ON",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether MyRocks should prevent zero cardinalityby always overriding it with some value."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_default_cf_options",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies the default column family options for MyRocks.Empty by default."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.rocksdb_delayed_write_rate",
            "minval": "0",
            "default": "16777216",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies the write rate in bytes per second, which should be usedif MyRocks hits a soft limit or threshold for writes.Default value is 16777216 (16 MB/sec).Allowed range is from 0 to 18446744073709551615."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "9223372036854775807",
            "dbms": 9,
            "name": "session_variables.rocksdb_delete_obsolete_files_period_micros",
            "minval": "0",
            "default": "21600000000",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies the period in microseconds to delete obsolete filesregardless of files removed during compaction.Default value is 21600000000 (6 hours).Allowed range is up to 9223372036854775807."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_enable_bulk_load_api",
            "minval": "null",
            "default": "ON",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether to use the SSTFileWriter feature for bulk loading,This feature bypasses the memtable,but requires keys to be inserted into the tablein either ascending or descending order.Enabled by default.If disabled, bulk loading uses the normal write path via the memtableand does not require keys to be inserted in any order."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_enable_thread_tracking",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether to enable tracking the status of threadsaccessing the database.Disabled by default.If enabled, thread status will be available via GetThreadList()."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_enable_ttl",
            "minval": "null",
            "default": "ON",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether to keep expired TTL records during compaction.Enabled by default.If disabled, expired TTL records will be dropped during compaction."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_enable_write_thread_adaptive_yield",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether the MyRocks write batch group leadershould wait up to the maximum allowed timebefore blocking on a mutex.Disabled by default.Enable it to increase throughput for concurrent workloads."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_error_if_exists",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether to report an error when a database already exists.Disabled by default."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "2",
            "dbms": 9,
            "name": "session_variables.rocksdb_flush_log_at_trx_commit",
            "minval": "0",
            "default": "1",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether to sync on every transaction commit,similar to"
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_flush_memtable_on_analyze",
            "minval": "null",
            "default": "ON",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether to flush the memtable when running ANALYZE on a table.Enabled by default.This ensures accurate cardinalityby including data in the memtable for calculating stats."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_force_compute_memtable_stats",
            "minval": "null",
            "default": "ON",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether data in the memtables should be includedfor calculating index statisticsused by the query optimizer.Enabled by default.This provides better accuracy, but may reduce performance."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_force_flush_memtable_and_lzero_now",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Works similar to force_flush_memtable_nowbut also flushes all L0 files."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_force_flush_memtable_now",
            "minval": "null",
            "default": "OFF",
            "tunable": false,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Forces MyRocks to immediately flush all memtables out to data files."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "2147483647",
            "dbms": 9,
            "name": "session_variables.rocksdb_force_index_records_in_range",
            "minval": "0",
            "default": "1",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies the value used to override the number of rows returned to query optimizer when FORCE INDEX is used.Default value is 1.Allowed range is from 0 to 2147483647.Set to 0 if you do not want to override the returned value."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_hash_index_allow_collision",
            "minval": "null",
            "default": "ON",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether hash collisions are allowed.Enabled by default, which uses less memory.If disabled, full prefix is stored to prevent hash collisions."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_index_type",
            "minval": "null",
            "default": "kBinarySearch",
            "tunable": true,
            "enumvals": "kBinarySearch,kHashSearch",
            "vartype": 5,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies the type of indexing used by MyRocks:"
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_info_log_level",
            "minval": "null",
            "default": "error_level",
            "tunable": true,
            "enumvals": "debug_level,info_level,warn_level,error_level,fatal_level",
            "vartype": 5,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies the level for filtering messages written by MyRocksto the mysqld log."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_is_fd_close_on_exec",
            "minval": "null",
            "default": "ON",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether child processes should inherit open file jandles.Enabled by default."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.rocksdb_keep_log_file_num",
            "minval": "1",
            "default": "1000",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies the maximum number of info log files to keep.Default value is 1000.Allowed range is from 1 to 18446744073709551615."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_lock_scanned_rows",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether to hold the lock on rows that are scanned during UPDATEand not actually updated.Disabled by default."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "1073741824",
            "dbms": 9,
            "name": "session_variables.rocksdb_lock_wait_timeout",
            "minval": "0",
            "default": "1",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies the number of seconds MyRocks should wait to acquire a row lockbefore aborting the request.Default value is 1.Allowed range is up to 1073741824."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.rocksdb_log_file_time_to_roll",
            "minval": "0",
            "default": "0",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies the period (in seconds) for rotating the info log files.Default value is 0, meaning that the log file is not rotated.Allowed range is up to 18446744073709551615."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.rocksdb_manifest_preallocation_size",
            "minval": "0",
            "default": "0",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "Specifies the number of bytes to preallocate for the MANIFEST fileused by MyRocks to store informationabout column families, levels, active files, etc.Default value is 0.Allowed range is up to 18446744073709551615."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.rocksdb_max_log_file_size",
            "minval": "0",
            "default": "0",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "Specifies the maximum size for info log files,after which the log is rotated.Default value is 0, meaning that only one log file is used.Allowed range is up to 18446744073709551615."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.rocksdb_max_manifest_file_size",
            "minval": "0",
            "default": "18446744073709551615",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "Specifies the maximum size of the MANIFEST data file,after which it is rotated.Default value is also the maximum, making it practically unlimited:only one manifest file is used."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "4294967295",
            "dbms": 9,
            "name": "session_variables.rocksdb_max_open_files",
            "minval": "0",
            "default": "4294967295",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies the maximum number of file handles opened by MyRocks.Default value is also the maximum, making it practically unlimited:all opened files remain open."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "1073741824",
            "dbms": 9,
            "name": "session_variables.rocksdb_max_row_locks",
            "minval": "0",
            "default": "1073741824",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies the limit on the maximum number of row locks a transaction can havebefore it fails.Default value is also the maximum, making it practically unlimited:transactions never fail due to row locks."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "64",
            "dbms": 9,
            "name": "session_variables.rocksdb_max_subcompactions",
            "minval": "1",
            "default": "1",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies the maximum number of threads allowed for each compaction job.Default value of 1 means no subcompactions (one thread per compaction job).Allowed range is up to 64."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "9223372036854775807",
            "dbms": 9,
            "name": "session_variables.rocksdb_max_total_wal_size",
            "minval": "0",
            "default": "0",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "Specifies the maximum total size of WAL (write-ahead log) files,after which memtables are flushed.Default value is 0: WAL size limit is chosen dynamically.Allowed range is up to 9223372036854775807."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.rocksdb_merge_buf_size",
            "minval": "100",
            "default": "67108864",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "Specifies the size (in bytes) of the merge-sort buffersused to accumulate data during secondary key creation.New entries are written directly to the lowest level in the database,instead of updating indexes through the memtable and L0.These values are sorted using merge-sort,with buffers set to 64 MB by default (67108864).Allowed range is from 100 to 18446744073709551615."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.rocksdb_merge_combine_read_size",
            "minval": "100",
            "default": "1073741824",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "Specifies the size (in bytes) of the merge-combine bufferused for the merge-sort algorithmas described in rocksdb_merge_buf_size.Default size is 1 GB (1073741824).Allowed range is from 100 to 18446744073709551615."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_new_table_reader_for_compaction_inputs",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether MyRocks should create a new file descriptor and table readerfor each compaction input.Disabled by default.Enabling this may increase memory consumption,but will also allow pre-fetch options to be specified for compactioninput files without impacting table readers used for user queries."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_no_block_cache",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether to disable the block cache for column families.Variable is disabled by default,meaning that using the block cache is allowed."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_override_cf_options",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies option overrides for each column family.Empty by default."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_paranoid_checks",
            "minval": "null",
            "default": "ON",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether MyRocks should re-read the data fileas soon as it is created to verify correctness.Enabled by default."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_pause_background_work",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether MyRocks should pause all background operations.Disabled by default."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "4",
            "dbms": 9,
            "name": "session_variables.rocksdb_perf_context_level",
            "minval": "0",
            "default": "0",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies the level of information to capture with the Perf Context plugins.Default value is 0.Allowed range is up to 4."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_persistent_cache_path",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies the path to the persistent cache.Set this together with rocksdb_persistent_cache_size_mb."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.rocksdb_persistent_cache_size_mb",
            "minval": "0",
            "default": "0",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "Specifies the size of the persisten cache in megabytes.Default is 0 (persistent cache disabled).Allowed range is up to 18446744073709551615.Set this together with rocksdb_persistent_cache_path."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_pin_l0_filter_and_index_blocks_in_cache",
            "minval": "null",
            "default": "ON",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether MyRocks pins the filter and index blocks in the cacheif rocksdb_cache_index_and_filter_blocks is enabled.Enabled by default."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_print_snapshot_conflict_queries",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether queries that generate snapshot conflictsshould be logged to the error log.Disabled by default."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "9223372036854775807",
            "dbms": 9,
            "name": "session_variables.rocksdb_rate_limiter_bytes_per_sec",
            "minval": "0",
            "default": "0",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "Specifies the maximum rate at which MyRocks can write to mediavia memtable flushes and compaction.Default value is 0 (write rate is not limited).Allowed range is up to 9223372036854775807."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_read_free_rpl_tables",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Lists tables (as a regular expression)that should use read-free replication on the slave(that is, replication without row lookups).Empty by default."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "2147483647",
            "dbms": 9,
            "name": "session_variables.rocksdb_records_in_range",
            "minval": "0",
            "default": "0",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies the value to overrride the result of records_in_range().Default value is 0.Allowed range is up to 2147483647."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_reset_stats",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Resets MyRocks internal statistics dynamically(without restarting the server)."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "4294967295",
            "dbms": 9,
            "name": "session_variables.rocksdb_seconds_between_stat_computes",
            "minval": "0",
            "default": "3600",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies the number of seconds to waitbetween recomputation of table statistics for the optimizer.During that time, only changed indexes are updated.Default value is 3600.Allowed is from 0 to 4294967295."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_signal_drop_index_thread",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Signals the MyRocks drop index thread to wake up."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_skip_bloom_filter_on_read",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether bloom filters should be skipped on reads.Disabled by default (bloom filters are not skipped)."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_skip_fill_cache",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether to skip caching data on read requests.Disabled by default (caching is not skipped)."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.rocksdb_sst_mgr_rate_bytes_per_sec",
            "minval": "0",
            "default": "67108864",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies the maximum rate for writing to data files.Default value is 67108864 (64 MB/sec).Allowed range is from 0 to 18446744073709551615."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "2147483647",
            "dbms": 9,
            "name": "session_variables.rocksdb_stats_dump_period_sec",
            "minval": "0",
            "default": "600",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies the period in seconds for performing a dump of the MyRocks statisticsto the info log.Default value is 600.Allowed range is up to 2147483647."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_store_row_debug_checksums",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether to include checksums when writing index or table records.Disabled by default."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_strict_collation_check",
            "minval": "null",
            "default": "ON",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether to check and verifythat table indexes have proper collation settings.Enabled by default."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_strict_collation_exceptions",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Lists tables (as a regular expression) that should be excludedfrom verifying case-sensitive collationenforced by rocksdb_strict_collation_check.Empty by default."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "2147483647",
            "dbms": 9,
            "name": "session_variables.rocksdb_table_cache_numshardbits",
            "minval": "0",
            "default": "6",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies the number if table caches.Default value is 6.Allowed range is from 0 to 2147483647."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "100",
            "dbms": 9,
            "name": "session_variables.rocksdb_table_stats_sampling_pct",
            "minval": "0",
            "default": "10",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies the percentage of entries to samplewhen collecting statistics about table properties.Default value is 10.Allowed range is from 0 to 100."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_tmpdir",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies the path to the directory for temporary files during DDL operations."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_trace_sst_api",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether to generate trace output in the logfor each call to SstFileWriter.Disabled by default."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_unsafe_for_binlog",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether to allow statement-based binary loggingwhich may break consistency.Disabled by default."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_update_cf_options",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies option updates for each column family.Empty by default."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_use_adaptive_mutex",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether to use adaptive mutexwhich spins in user space before resorting to the kernel.Disabled by default."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_use_direct_io_for_flush_and_compaction",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether to write to data files directly,without caches or buffers.Disabled by default."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_use_direct_reads",
            "minval": "null",
            "default": "OFF",
            "tunable": false,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether to read data files directly,without caches or buffers.Disabled by default.If you enable this,make sure that rocksdb_allow_mmap_reads is disabled."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_use_fsync",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether MyRocks should use fsync instead of fdatasyncwhen requesting a sync of a data file.Disabled by default."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "2",
            "dbms": 9,
            "name": "session_variables.rocksdb_validate_tables",
            "minval": "0",
            "default": "1",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether to verify that MySQL .frm files match MyRocks tables. Possible Values: 0: do not verify. 1: verify and fail on error (default). 2: verify and continue with error"
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_verify_row_debug_checksums",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether to verify checksums when reading index or table records.Disabled by default."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.rocksdb_wal_bytes_per_sync",
            "minval": "0",
            "default": "0",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "Specifies how often should the OS sync WAL (write-ahead log) files to diskas they are being written, asynchronously, in the background.This operation can be used to smooth out write I/O over time.Default value is 0, meaning that files are never synced.Allowed range is up to 18446744073709551615."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_wal_dir",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies the path to the directory where MyRocks stores WAL files."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "3",
            "dbms": 9,
            "name": "session_variables.rocksdb_wal_recovery_mode",
            "minval": "0",
            "default": "1",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies the level of tolerance when recovering WAL filesafter a system crash.Default is 1.Allowed range is from 0 to 3."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "9223372036854775807",
            "dbms": 9,
            "name": "session_variables.rocksdb_wal_size_limit_mb",
            "minval": "0",
            "default": "0",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "Specifies the maximum size of all WAL files in megabytesbefore attempting to flush memtables and delete the oldest files.Default value is 0 (never rotated).Allowed range is up to 9223372036854775807."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "9223372036854775807",
            "dbms": 9,
            "name": "session_variables.rocksdb_wal_ttl_seconds",
            "minval": "0",
            "default": "0",
            "tunable": true,
            "enumvals": "null",
            "vartype": 3,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies the timeout in seconds before deleting archived WAL files.Default is 0 (archived WAL files are never deleted).Allowed range is up to 9223372036854775807."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_whole_key_filtering",
            "minval": "null",
            "default": "ON",
            "tunable": false,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether the bloomfilter should use the whole key for filteringinstead of just the prefix.Enabled by default.Make sure that lookups use the whole key for matching."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_write_disable_wal",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Lets you temporarily disable writes to WAL files,which can be useful for bulk loading."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rocksdb_write_ignore_missing_column_families",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Specifies whether to ignore writes to column families that do not exist.Disabled by default (writes to non-existent column families are not ignored)."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rpl_semi_sync_master_enabled",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Controls whether semisynchronous replication is enabled on the master. To enable or disable the plugin, set this variable to ON or OFF (or 1 or 0), respectively. The default is OFF."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rpl_semi_sync_master_timeout",
            "minval": "null",
            "default": "10000",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 2,
            "description": "A value in milliseconds that controls how long the master waits on a commit for acknowledgment from a slave before timing out and reverting to asynchronous replication. The default value is 10000 (10 seconds)."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rpl_semi_sync_master_trace_level",
            "minval": "null",
            "default": "32",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The semisynchronous replication debug trace level on the master. Four levels are defined:"
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rpl_semi_sync_master_wait_no_slave",
            "minval": "null",
            "default": "ON",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "With semisynchronous replication, for each transaction, the master waits until timeout for acknowledgment of receipt from some semisynchronous slave. If no response occurs during this period, the master reverts to normal replication. This variable controls whether the master waits for the timeout to expire before reverting to normal replication even if the slave count drops to zero during the timeout period."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rpl_semi_sync_slave_enabled",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Controls whether semisynchronous replication is enabled on the slave. To enable or disable the plugin, set this variable to ON or OFF (or 1 or 0), respectively. The default is OFF."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.rpl_semi_sync_slave_trace_level",
            "minval": "null",
            "default": "32",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The semisynchronous replication debug trace level on the slave. See rpl_semi_sync_master_trace_level for the permissible values."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "31536000",
            "dbms": 9,
            "name": "session_variables.rpl_stop_slave_timeout",
            "minval": "2",
            "default": "31536000",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "In MySQL 5.6.13 and later, you can control the length of time (in seconds) that STOP SLAVE waits before timing out by setting this variable. This can be used to avoid deadlocks between STOP SLAVE and other slave SQL statements using different client connections to the slave."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.secure_auth",
            "minval": "null",
            "default": "ON",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "If this variable is enabled, the server blocks connections by clients that attempt to use accounts that have passwords stored in the old (pre-4.1) format."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.secure_file_priv",
            "minval": "null",
            "default": "platform specific",
            "tunable": false,
            "enumvals": "empty,dirname,NULL",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable is used to limit the effect of data import and export operations, such as those performed by the LOAD DATA and SELECT ... INTO OUTFILE statements and the LOAD_FILE() function. These operations are permitted only to users who have the FILE privilege."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "4294967295",
            "dbms": 9,
            "name": "session_variables.server_id",
            "minval": "0",
            "default": "0",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The server ID, used in replication to give each master and slave a unique identity. This variable is set by the --server-id option. For each server participating in replication, you should pick a positive integer in the range from 1 to 232 2212 1 to act as that server's ID."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.server_id_bits",
            "minval": "null",
            "default": "32 ",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": ""
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.server_uuid",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Beginning with MySQL 5.6, the server generates a true UUID in addition to the --server-id supplied by the user. This is available as the global, read-only variable server_uuid."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.sha256_password_private_key_path",
            "minval": "null",
            "default": "private_key.pem",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable is available if MySQL was compiled using OpenSSL (see Section 00a06.4.4, 201cOpenSSL Versus yaSSL201d). Its value is the path name of the RSA private key file for the sha256_password authentication plugin. If the file is named as a relative path, it is interpreted relative to the server data directory. The file must be in PEM format."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.sha256_password_public_key_path",
            "minval": "null",
            "default": "public_key.pem",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable is available if MySQL was compiled using OpenSSL (see"
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.show_old_temporals",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Whether SHOW CREATE TABLE output includes comments to flag temporal columns found to be in pre-5.6.4 format (TIME, DATETIME, and TIMESTAMP columns without support for fractional seconds precision). This variable is disabled by default. If enabled, SHOW CREATE TABLE output looks like this:"
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.simplified_binlog_gtid_recovery",
            "minval": "null",
            "default": "FALSE",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This option is deprecated and will be removed in a future MySQL release. Use the renamed binlog_gtid_simple_recovery to control how MySQL iterates through binary log files after a crash."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.skip_external_locking",
            "minval": "null",
            "default": "ON",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This is OFF if mysqld uses external locking (system locking), ON if external locking is disabled. This affects only MyISAM table access."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.skip_name_resolve",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable is set from the value of the --skip-name-resolve option. If it is OFF, mysqld resolves host names when checking client connections. If it is ON, mysqld uses only IP numbers; in this case, all Host column values in the grant tables must be IP addresses or localhost. See Section00a08.12.5.2, 201cDNS Lookup Optimization and the Host Cache201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.skip_networking",
            "minval": "null",
            "default": "OFF",
            "tunable": false,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This is ON if the server permits only local (non-TCP/IP) connections. On Unix, local connections use a Unix socket file. On Windows, local connections use a named pipe or shared memory. This variable can be set to ON with the --skip-networking option."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.skip_show_database",
            "minval": "null",
            "default": "OFF",
            "tunable": false,
            "enumvals": "null",
            "vartype": 4,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This prevents people from using the SHOW DATABASES statement if they do not have the SHOW DATABASES privilege. This can improve security if you have concerns about users being able to see databases belonging to other users. Its effect depends on the SHOW DATABASES privilege: If the variable value is ON, the SHOW DATABASES statement is permitted only to users who have the SHOW DATABASES privilege, and the statement displays all database names. If the value is OFF, SHOW DATABASES is permitted to all users, but displays the names of only those databases for which the user has the SHOW DATABASES or other privilege. (Note that any global privilege is considered a privilege for the database.)"
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.slave_allow_batching",
            "minval": "null",
            "default": "off",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": ""
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "524280",
            "dbms": 9,
            "name": "session_variables.slave_checkpoint_group",
            "minval": "32",
            "default": "512",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Sets the maximum number of transactions that can be processed by a multi-threaded slave before a checkpoint operation is called to update its status as shown by SHOW SLAVE STATUS. Setting this variable has no effect on slaves for which multi-threading is not enabled."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "4G",
            "dbms": 9,
            "name": "session_variables.slave_checkpoint_period",
            "minval": "1",
            "default": "300",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 2,
            "description": "Sets the maximum time (in milliseconds) that is allowed to pass before a checkpoint operation is called to update the status of a multi-threaded slave as shown by SHOW SLAVE STATUS. Setting this variable has no effect on slaves for which multi-threading is not enabled."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.slave_compressed_protocol",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "If this option is set to 1, use compression for the slave/master protocol if both the slave and the master support it. The default is 0 (no compression)."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.slave_exec_mode",
            "minval": "null",
            "default": " IDEMPOTENT(NDB)",
            "tunable": true,
            "enumvals": "IDEMPOTENT,STRICT",
            "vartype": 5,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Controls how a slave thread resolves conflicts and errors during replication. IDEMPOTENT mode causes suppression of duplicate-key and no-key-found errors; STRICT means no such suppression takes place."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.slave_load_tmpdir",
            "minval": "null",
            "default": "/tmp",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The name of the directory where the slave creates temporary files. This option is by default equal to the value of the tmpdir system variable. When the slave SQL thread replicates a LOAD DATA INFILE statement, it extracts the file to be loaded from the relay log into temporary files, and then loads these into the table. If the file loaded on the master is huge, the temporary files on the slave are huge, too. Therefore, it might be advisable to use this option to tell the slave to put temporary files in a directory located in some file system that has a lot of available space. In that case, the relay logs are huge as well, so you might also want to use the --relay-log option to place the relay logs in that file system."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "1073741824",
            "dbms": 9,
            "name": "session_variables.slave_max_allowed_packet",
            "minval": "1024",
            "default": "1073741824",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "In MySQL 5.6.6 and later, this variable sets the maximum packet size for the slave SQL and I/O threads, so that large updates using row-based replication do not cause replication to fail because an update exceeded max_allowed_packet."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.slave_net_timeout",
            "minval": "1",
            "default": "3600",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The number of seconds to wait for more data from the master before the slave considers the connection broken, aborts the read, and tries to reconnect. The first retry occurs immediately after the timeout. The interval between retries is controlled by the MASTER_CONNECT_RETRY option for the CHANGE MASTER TO statement, and the number of reconnection attempts is limited by the --master-retry-count option. The default is 3600 seconds (one hour)."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "1024",
            "dbms": 9,
            "name": "session_variables.slave_parallel_workers",
            "minval": "0",
            "default": "0",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Sets the number of slave worker threads for executing replication events (transactions) in parallel. Setting this variable to 0 (the default) disables parallel execution. The maximum is 1024."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18EB",
            "dbms": 9,
            "name": "session_variables.slave_pending_jobs_size_max",
            "minval": "1024",
            "default": "16M",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "For multi-threaded slaves, this variable sets the maximum amount of memory (in bytes) available to slave worker queues holding events not yet applied. Setting this variable has no effect on slaves for which multi-threading is not enabled."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.slave_rows_search_algorithms",
            "minval": "null",
            "default": "TABLE_SCAN,INDEX_SCAN",
            "tunable": false,
            "enumvals": "TABLE_SCAN,INDEX_SCAN,INDEX_SCAN,HASH_SCAN,TABLE_SCAN,HASH_SCAN,TABLE_SCAN,INDEX_SCAN,HASH_SCAN",
            "vartype": 5,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "When preparing batches of rows for row-based logging and replication, this variable controls how the rows are searched for matches2014that is, whether or not hashing is used for searches using a primary or unique key, some other key, or using no key at all. Setting this variable takes effect for all replication channels immediately, including running channels. The initial setting for the system variable can be specified using the --slave-rows-search-algorithms option."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.slave_skip_errors",
            "minval": "null",
            "default": "OFF",
            "tunable": false,
            "enumvals": "OFF",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Normally, replication stops when an error occurs on the slave. This gives you the opportunity to resolve the inconsistency in the data manually. This option tells the slave SQL thread to continue replication when a statement returns any of the errors listed in the option value."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.slave_sql_verify_checksum",
            "minval": "null",
            "default": "1",
            "tunable": true,
            "enumvals": "0",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Cause the slave SQL thread to verify data using the checksums read from the relay log. In the event of a mismatch, the slave stops with an error."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.slave_transaction_retries",
            "minval": "0",
            "default": "10",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "If a replication slave SQL thread fails to execute a transaction because of an InnoDB deadlock or because the transaction's execution time exceeded InnoDB's innodb_lock_wait_timeout or NDB's TransactionDeadlockDetectionTimeout or TransactionInactiveTimeout, it automatically retries slave_transaction_retries times before stopping with an error. The default value is 10."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.slave_type_conversions",
            "minval": "null",
            "default": "Default",
            "tunable": false,
            "enumvals": "ALL_LOSSY",
            "vartype": 5,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Controls the type conversion mode in effect on the slave when using row-based replication. In MySQL 5.6.13 and later, its value is a comma-delimited set of zero or more elements from the list: ALL_LOSSY, ALL_NON_LOSSY, ALL_SIGNED, ALL_UNSIGNED. Set this variable to an empty string to disallow type conversions between the master and the slave. Changes require a restart of the slave to take effect."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.slow_launch_time",
            "minval": "null",
            "default": "2",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "If creating a thread takes longer than this many seconds, the server increments the Slow_launch_threads status variable."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.slow_query_log",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Whether the slow query log is enabled. The value can be 0 (or OFF) to disable the log or 1 (or ON) to enable the log. The default value depends on whether the --slow_query_log option is given. The destination for log output is controlled by the log_output system variable; if that value is NONE, no log entries are written even if the log is enabled."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.slow_query_log_file",
            "minval": "null",
            "default": "host_name-slow.log",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The name of the slow query log file. The default value is host_name-slow.log, but the initial value can be changed with the --slow_query_log_file option."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.socket",
            "minval": "null",
            "default": "/tmp/mysql.sock",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "On Unix platforms, this variable is the name of the socket file that is used for local client connections. The default is /tmp/mysql.sock. (For some distribution formats, the directory might be different, such as /var/lib/mysql for RPMs.)"
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.sort_buffer_size",
            "minval": "32768",
            "default": "262144",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "Each session that must perform a sort allocates a buffer of this size. sort_buffer_size is not specific to any storage engine and applies in a general manner for optimization. At minimum the sort_buffer_size value must be large enough to accommodate fifteen tuples in the sort buffer. Also, increasing the value of max_sort_length may require increasing the value of sort_buffer_size. For more information, see Section00a08.2.1.13, 201cORDER BY Optimization201d"
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.sql_auto_is_null",
            "minval": "null",
            "default": "0",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "If this variable is set to 1, then after a statement that successfully inserts an automatically generated AUTO_INCREMENT value, you can find that value by issuing a statement of the following form:"
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.sql_big_selects",
            "minval": "null",
            "default": "1",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "If set to 0, MySQL aborts SELECT statements that are likely to take a very long time to execute (that is, statements for which the optimizer estimates that the number of examined rows exceeds the value of max_join_size). This is useful when an inadvisable WHERE statement has been issued. The default value for a new connection is 1, which permits all SELECT statements."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.sql_buffer_result",
            "minval": "null",
            "default": "0",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "If set to 1, sql_buffer_result forces results from SELECT statements to be put into temporary tables. This helps MySQL free the table locks early and can be beneficial in cases where it takes a long time to send results to the client. The default value is 0."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.sql_log_bin",
            "minval": "null",
            "default": "ON",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable controls whether logging to the binary log is done. The default value is 1 (do logging). To change logging for the current session, change the session value of this variable. The session user must have the SUPER privilege to set this variable."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.sql_log_off",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable controls whether logging to the general query log is done. The default value is 0 (do logging). To change logging for the current session, change the session value of this variable. The session user must have the SUPER privilege to set this option. The default value is 0."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.sql_mode",
            "minval": "null",
            "default": "NO_ENGINE_SUBSTITUTION",
            "tunable": false,
            "enumvals": "null",
            "vartype": 5,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The current server SQL mode, which can be set dynamically. The default is NO_ENGINE_SUBSTITUTION. For details, see Section00a05.1.8, 201cServer SQL Modes201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.sql_notes",
            "minval": "null",
            "default": "ON",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "If set to 1 ON (the default), warnings of Note level increment warning_count and the server records them. If set to 0 OFF, Note warnings do not increment warning_count and the server does not record them. mysqldump includes output to set this variable to 0 so that reloading the dump file does not produce warnings for events that do not affect the integrity of the reload operation."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.sql_quote_show_create",
            "minval": "null",
            "default": "ON",
            "tunable": false,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "If set to 1 ON (the default), the server quotes identifiers for SHOW CREATE TABLE and SHOW CREATE DATABASE statements. If set to 0, quoting is disabled. This option is enabled by default so that replication works for identifiers that require quoting. "
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.sql_safe_updates",
            "minval": "null",
            "default": "OFF",
            "tunable": false,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "If set to 1 ON, MySQL aborts UPDATE or DELETE statements that do not use a key in the WHERE clause or a LIMIT clause. (Specifically, UPDATE statements must have a WHERE clause that uses a key or a LIMIT clause, or both. DELETE statements must have both.) This makes it possible to catch UPDATE or DELETE statements where keys are not used properly and that would probably change or delete a large number of rows. The default value is 0."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.sql_select_limit",
            "minval": "null",
            "default": "18446744073709551615",
            "tunable": false,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The maximum number of rows to return from SELECT statements. The default value for a new connection is the maximum number of rows that the server permits per table. Typical default values are (232)22121 or (264)22121. If you have changed the limit, the default value can be restored by assigning a value of DEFAULT."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.sql_slave_skip_counter",
            "minval": "null",
            "default": "0",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The number of events from the master that a slave server should skip."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.sql_warnings",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable controls whether single-row INSERT statements produce an information string if warnings occur. The default is 0 OFF. Set the value to 1 ON to produce an information string."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.ssl_ca",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The path to a file with a list of trusted SSL CAs."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.ssl_capath",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The path to a directory that contains trusted SSL CA certificates in PEM format."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.ssl_cert",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The name of the SSL certificate file to use for establishing a secure connection."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.ssl_cipher",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "A list of permissible ciphers to use for SSL encryption."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.ssl_crl",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The path to a file containing certificate revocation lists in PEM format. Revocation lists work for MySQL distributions compiled using OpenSSL (but not yaSSL). See Section00a06.4.4, 201cOpenSSL Versus yaSSL201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.ssl_crlpath",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The path to a directory that contains files containing certificate revocation lists in PEM format. Revocation lists work for MySQL distributions compiled using OpenSSL (but not yaSSL). See Section\u00a06.4.4, \u201cOpenSSL Versus yaSSL\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.ssl_key",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The name of the SSL key file to use for establishing a secure connection."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.storage_engine",
            "minval": "null",
            "default": "InnoDB",
            "tunable": false,
            "enumvals": "null",
            "vartype": 5,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The default storage engine (table type). To set the storage engine at server startup, use the --default-storage-engine option. See Section\u00a05.1.4, \u201cServer Command Options\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "524288",
            "dbms": 9,
            "name": "session_variables.stored_program_cache",
            "minval": "256",
            "default": "256",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Sets a soft upper limit for the number of cached stored routines per connection. The value of this variable is specified in terms of the number of stored routines held in each of the two caches maintained by the MySQL Server for, respectively, stored procedures and stored functions."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "4294967295",
            "dbms": 9,
            "name": "session_variables.sync_binlog",
            "minval": "0",
            "default": "0",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "If the value of this variable is greater than 0, the MySQL server synchronizes its binary log to disk (using fdatasync()) after sync_binlog commit groups are written to the binary log. The default value of sync_binlog is 0, which does no synchronizing to disk\u2014in this case, the server relies on the operating system to flush the binary log's contents from time to time as for any other file. A value of 1 is the safest choice because in the event of a crash you lose at most one commit group from the binary log. However, it is also the slowest choice (unless the disk has a battery-backed cache, which makes synchronization very fast)."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.sync_frm",
            "minval": "null",
            "default": "TRUE",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "If this variable is set to 1, when any nontemporary table is created its .frm file is synchronized to disk (using fdatasync()). This is slower but safer in case of a crash. The default is 1."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.sync_master_info",
            "minval": "0",
            "default": "10000",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The effects of this variable on a replication slave depend on whether the slave's master_info_repository is set to FILE or TABLE, as explained in the following paragraphs."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.sync_relay_log",
            "minval": "0",
            "default": "10000",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "If the value of this variable is greater than 0, the MySQL server synchronizes its relay log to disk (using fdatasync()) after every sync_relay_log events are written to the relay log."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.sync_relay_log_info",
            "minval": "0",
            "default": "10000",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The effects of this variable on the slave depend on the server's relay_log_info_repository setting (FILE or TABLE), and if this is TABLE, additionally on whether the storage engine used by the relay log info table is transactional (such as InnoDB) or not (MyISAM). The effects of these factors on the behavior of the server for sync_relay_log_info values of zero and greater than zero are shown in the following table:"
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.system_time_zone",
            "minval": "null",
            "default": "utc",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The server system time zone. When the server begins executing, it inherits a time zone setting from the machine defaults, possibly modified by the environment of the account used for running the server or the startup script. The value is used to set system_time_zone. Typically the time zone is specified by the TZ environment variable. It also can be specified using the --timezone option of the mysqld_safe script."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "524288",
            "dbms": 9,
            "name": "session_variables.table_definition_cache",
            "minval": "400",
            "default": "-1 (autosized)",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The number of table definitions (from .frm files) that can be stored in the definition cache. If you use a large number of tables, you can create a large table definition cache to speed up opening of tables. The table definition cache takes less space and does not use file descriptors, unlike the normal table cache. The minimum value is 400. The default value is based on the following formula, capped to a limit of 2000:"
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "524288",
            "dbms": 9,
            "name": "session_variables.table_open_cache",
            "minval": "1",
            "default": "2000",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The number of open tables for all threads. Increasing this value increases the number of file descriptors that mysqld requires. You can check whether you need to increase the table cache by checking the Opened_tables status variable. See Section\u00a05.1.7, \u201cServer Status Variables\u201d. If the value of Opened_tables is large and you do not use FLUSH TABLES often (which just forces all tables to be closed and reopened), then you should increase the value of the table_open_cache variable. For more information about the table cache, see Section\u00a08.4.3.1, \u201cHow MySQL Opens and Closes Tables\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "64",
            "dbms": 9,
            "name": "session_variables.table_open_cache_instances",
            "minval": "1",
            "default": "1",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The number of open tables cache instances (default 1). To improve scalability by reducing contention among sessions, the open tables cache can be partitioned into several smaller cache instances of size table_open_cache / table_open_cache_instances . A session needs to lock only one instance to access it for DML statements. This segments cache access among instances, permitting higher performance for operations that use the cache when there are many sessions accessing tables. (DDL statements still require a lock on the entire cache, but such statements are much less frequent than DML statements.)"
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "16384",
            "dbms": 9,
            "name": "session_variables.thread_cache_size",
            "minval": "0",
            "default": "-1 (autosized)",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "How many threads the server should cache for reuse. When a client disconnects, the client's threads are put in the cache if there are fewer than thread_cache_size threads there. Requests for threads are satisfied by reusing threads taken from the cache if possible, and only when the cache is empty is a new thread created. This variable can be increased to improve performance if you have a lot of new connections. Normally, this does not provide a notable performance improvement if you have a good thread implementation. However, if your server sees hundreds of connections per second you should normally set thread_cache_size high enough so that most new connections use cached threads. By examining the difference between the Connections and Threads_created status variables, you can see how efficient the thread cache is. For details, see Section\u00a05.1.7, \u201cServer Status Variables\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "512",
            "dbms": 9,
            "name": "session_variables.thread_concurrency",
            "minval": "1",
            "default": "10",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable is specific to Solaris 8 and earlier systems, for which mysqld invokes the thr_setconcurrency() function with the variable value. This function enables applications to give the threads system a hint about the desired number of threads that should be run at the same time. Current Solaris versions document this as having no effect."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.thread_handling",
            "minval": "null",
            "default": "one-thread-per-connection",
            "tunable": true,
            "enumvals": "no-threads,one-thread-per-connection,dynamically-loaded",
            "vartype": 5,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The thread-handling model used by the server for connection threads. The permissible values are no-threads (the server uses a single thread to handle one connection) and one-thread-per-connection (the server uses one thread to handle each client connection). no-threads is useful for debugging under Linux; see Section\u00a024.5, \u201cDebugging and Porting MySQL\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.thread_stack",
            "minval": "131072",
            "default": "262144",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "The stack size for each thread. Many of the limits detected by the crash-me test are dependent on this value. See Section\u00a08.13.2, 201cThe MySQL Benchmark Suite\u201d. The default of 192KB (256KB for 64-bit systems) is large enough for normal operation. If the thread stack size is too small, it limits the complexity of the SQL statements that the server can handle, the recursion depth of stored procedures, and other memory-consuming actions."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.time_format",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable is unused. It is deprecated and will be removed in a future MySQL release."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.time_zone",
            "minval": "null",
            "default": "system",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The current time zone. This variable is used to initialize the time zone for each client that connects. By default, the initial value of this is 'SYSTEM' (which means, \u201cuse the value of system_time_zone\u201d). The value can be specified explicitly at server startup with the --default-time-zone option. See Section\u00a010.6, \u201cMySQL Server Time Zone Support\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.timed_mutexes",
            "minval": "null",
            "default": "OFF",
            "tunable": false,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable is deprecated; it has no use. It will be removed in a future MySQL release."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.timestamp",
            "minval": "null",
            "default": "0.0",
            "tunable": false,
            "enumvals": "null",
            "vartype": 3,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "Set the time for this client. This is used to get the original timestamp if you use the binary log to restore rows. timestamp_value should be a Unix epoch timestamp (a value like that returned by UNIX_TIMESTAMP(), not a value in 'YYYY-MM-DD hh:mm:ss' format) or DEFAULT."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.tmp_table_size",
            "minval": "1024",
            "default": "16777216",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "The maximum size of internal in-memory temporary tables. This variable does not apply to user-created MEMORY tables."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.tmpdir",
            "minval": "null",
            "default": "/tmp",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The directory used for temporary files and temporary tables. This variable can be set to a list of several paths that are used in round-robin fashion. Paths should be separated by colon characters (:) on Unix and semicolon characters (;) on Windows."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.transaction_alloc_block_size",
            "minval": "1024",
            "default": "8192",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "The amount in bytes by which to increase a per-transaction memory pool which needs memory. See the description of transaction_prealloc_size."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.transaction_allow_batching",
            "minval": "null",
            "default": "FALSE",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": ""
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "18446744073709551615",
            "dbms": 9,
            "name": "session_variables.transaction_prealloc_size",
            "minval": "1024",
            "default": "4096",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 1,
            "description": "There is a per-transaction memory pool from which various transaction-related allocations take memory. The initial size of the pool in bytes is transaction_prealloc_size. For every allocation that cannot be satisfied from the pool because it has insufficient memory available, the pool is increased by transaction_alloc_block_size bytes. When the transaction ends, the pool is truncated to transaction_prealloc_size bytes."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.tx_isolation",
            "minval": "null",
            "default": "REPEATABLE-READ",
            "tunable": true,
            "enumvals": "READ-UNCOMMITTED,READ-COMMITTED,REPEATABLE-READ,SERIALIZABLE",
            "vartype": 5,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The default transaction isolation level. Defaults to REPEATABLE-READ."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.tx_read_only",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The default transaction access mode. The value can be OFF (read/write, the default) or ON (read only)."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.unique_checks",
            "minval": "null",
            "default": "1",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "If set to 1 (the default), uniqueness checks for secondary indexes in InnoDB tables are performed. If set to 0, storage engines are permitted to assume that duplicate keys are not present in input data. If you know for certain that your data does not contain uniqueness violations, you can set this to 0 to speed up large table imports to InnoDB."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.updatable_views_with_limit",
            "minval": "null",
            "default": "1",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "This variable controls whether updates to a view can be made when the view does not contain all columns of the primary key defined in the underlying table, if the update statement contains a LIMIT clause. (Such updates often are generated by GUI tools.) An update is an UPDATE or DELETE statement. Primary key here means a PRIMARY KEY, or a UNIQUE index in which no column can contain NULL."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.version",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The number of errors, warnings, and notes that resulted from the last statement"
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.version_comment",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The CMake configuration program has a COMPILATION_COMMENT option that permits a comment to be specified when building MySQL. This variable contains the value of that comment. See Section\u00a02.9.4, 201cMySQL Source-Configuration Options\u201d."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.version_compile_machine",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The type of the server binary."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.version_compile_os",
            "minval": "null",
            "default": "",
            "tunable": false,
            "enumvals": "null",
            "vartype": 1,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The type of operating system on which MySQL was built."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "31536000",
            "dbms": 9,
            "name": "session_variables.wait_timeout",
            "minval": "1",
            "default": "28800",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The number of seconds the server waits for activity on a noninteractive connection before closing it."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "session_variables.warning_count",
            "minval": "null",
            "default": "0",
            "tunable": false,
            "enumvals": "null",
            "vartype": 2,
            "context": "restart",
            "scope": "global",
            "summary": "",
            "unit": 3,
            "description": "The number of errors, warnings, and notes that resulted from the last statement that generated messages. This variable is read only."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "128",
            "dbms": 9,
            "name": "rocksdb_cf_options.level0_file_num_compaction_trigger",
            "minval": "-1",
            "default": "4",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "column_family",
            "summary": "",
            "unit": 3,
            "description": "Number of files to trigger level-0 compaction. A value <0 means that level-0 compaction will not be triggered by number of files at all."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "128",
            "dbms": 9,
            "name": "rocksdb_cf_options.num_levels",
            "minval": "2",
            "default": "7",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "column_family",
            "summary": "",
            "unit": 3,
            "description": "Number of levels for this database."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "512",
            "dbms": 9,
            "name": "rocksdb_cf_options.level0_stop_writes_trigger",
            "minval": "2",
            "default": "36",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "column_family",
            "summary": "",
            "unit": 3,
            "description": "Maximum number of level-0 files.  We stop writes at this point."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "512",
            "dbms": 9,
            "name": "rocksdb_cf_options.level0_slowdown_writes_trigger",
            "minval": "2",
            "default": "20",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "column_family",
            "summary": "",
            "unit": 3,
            "description": "Soft limit on number of level-0 files. We start slowing down writes at this point. A value <0 means that no writing slow down will be triggered by number of files in level-0."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "17179869184",
            "dbms": 9,
            "name": "rocksdb_cf_options.max_bytes_for_level_base",
            "minval": "1048576",
            "default": "268435456",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "column_family",
            "summary": "",
            "unit": 3,
            "description": "Control maximum total data size for a level. max_bytes_for_level_base is the max total for level-1. Maximum number of bytes for level L can be calculated as (max_bytes_for_level_base) * (max_bytes_for_level_multiplier ^ (L-1))"
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "64",
            "dbms": 9,
            "name": "rocksdb_cf_options.max_bytes_for_level_multiplier",
            "minval": "2",
            "default": "10",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "column_family",
            "summary": "",
            "unit": 3,
            "description": "we make last level the base level, which means merging L0 data into the last level, until it exceeds max_bytes_for_level_base. And then we make the second last level to be base level, to start to merge L0 data to second last level, with its target size to be 1/max_bytes_for_level_multiplier of the last level's extra size."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "17179869184",
            "dbms": 9,
            "name": "rocksdb_cf_options.target_file_size_base",
            "minval": "1048576",
            "default": "67108864",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "column_family",
            "summary": "",
            "unit": 3,
            "description": "target_file_size_base is per-file size for level-1.Target file size for level L can be calculated by target_file_size_base * (target_file_size_multiplier ^ (L-1))"
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "64",
            "dbms": 9,
            "name": "rocksdb_cf_options.target_file_size_multiplier",
            "minval": "1",
            "default": "1",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "column_family",
            "summary": "",
            "unit": 3,
            "description": "By default target_file_size_multiplier is 1, which means by default files in different levels will have similar size."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "128",
            "dbms": 9,
            "name": "rocksdb_cf_options.max_sequential_skip_in_iterations",
            "minval": "2",
            "default": "8",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "column_family",
            "summary": "",
            "unit": 3,
            "description": "This number specifies the number of keys (with the same userkey) that will be sequentially skipped before a reseek is issued."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "64",
            "dbms": 9,
            "name": "rocksdb_cf_options.max_write_buffer_number",
            "minval": "2",
            "default": "2",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "column_family",
            "summary": "",
            "unit": 3,
            "description": "The maximum number of write buffers that are built up in memory. The default and the minimum number is 2, so that when 1 write buffer is being flushed to storage, new writes can continue to the other write buffer."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "64",
            "dbms": 9,
            "name": "rocksdb_cf_options.min_write_buffer_number_to_merge",
            "minval": "1",
            "default": "1",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "column_family",
            "summary": "",
            "unit": 3,
            "description": "The minimum number of write buffers that will be merged together before writing to storage."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "64",
            "dbms": 9,
            "name": "rocksdb_cf_options.table_factory::block_size_deviation",
            "minval": "1",
            "default": "10",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "column_family",
            "summary": "",
            "unit": 3,
            "description": "If the percentage of free space in the current block is less than this specified number and adding a new record to the block will exceed the configured block size, then this block will be closed and the new record will be written to the next block."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "64",
            "dbms": 9,
            "name": "rocksdb_cf_options.table_factory::block_restart_interval",
            "minval": "1",
            "default": "16",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "column_family",
            "summary": "",
            "unit": 3,
            "description": "Number of keys between restart points for delta encoding of keys."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "67108864",
            "dbms": 9,
            "name": "rocksdb_cf_options.table_factory::block_size",
            "minval": "512",
            "default": "4096",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "column_family",
            "summary": "",
            "unit": 3,
            "description": "Approximate size of user data packed per block."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "17179869184",
            "dbms": 9,
            "name": "rocksdb_cf_options.write_buffer_size",
            "minval": "1048576",
            "default": "67108864",
            "tunable": true,
            "enumvals": "null",
            "vartype": 2,
            "context": "dynamic",
            "scope": "column_family",
            "summary": "",
            "unit": 3,
            "description": "Amount of data to build up in memory (backed by an unsorted log on disk) before converting to a sorted on-disk file."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "rocksdb_cf_options.level_compaction_dynamic_level_bytes",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "column_family",
            "summary": "",
            "unit": 3,
            "description": "If ON, RocksDB will pick target size of each level dynamically."
        },
        "model": "website.KnobCatalog"
    },
    {
        "fields": {
            "category": "",
            "maxval": "null",
            "dbms": 9,
            "name": "rocksdb_cf_options.disable_auto_compactions",
            "minval": "null",
            "default": "OFF",
            "tunable": true,
            "enumvals": "null",
            "vartype": 4,
            "context": "dynamic",
            "scope": "column_family",
            "summary": "",
            "unit": 3,
            "description": "Disable automatic compactions. Manual compactions can still be issued on this column family"
        },
        "model": "website.KnobCatalog"
    }
   
]
